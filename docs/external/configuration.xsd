<?xml version='1.0'?>
<schema elementFormDefault="qualified"
	targetNamespace="http://emailioconnector.coe.cordys.com/2.0/configuration"
	xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://emailioconnector.coe.cordys.com/2.0/configuration"
	attributeFormDefault="unqualified">
	<element name="configuration" type="tns:ctConfiguration">
		<annotation>
			<documentation>The main XML tag for the processor configuration.
			</documentation>
		</annotation>
	</element>
	<element name="emailboxes" type="tns:ctEmailBoxes">
		<annotation>
			<documentation>This tag is the root tag for configuring the email
				boxes that should be monitored.</documentation>
		</annotation>
	</element>
	<element name="triggers" type="tns:ctTriggers">
		<annotation>
			<documentation>This tag contains all triggers that are defined for a
				certain email box.</documentation>
		</annotation>
	</element>
	<element name="rules" type="tns:ctRules">
		<annotation>
			<documentation>This tag contains all rule definition that a certain
				email message must match.</documentation>
		</annotation>
	</element>
	<complexType name="ctEmailBoxes">
		<sequence>
			<element maxOccurs="unbounded" minOccurs="0" name="emailbox"
				type="tns:ctEmailBox">
				<annotation>
					<documentation>This tag contains the definition of a single email
						box and it's triggers.</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>

	<complexType name="ctEmailBox">
		<complexContent>
			<extension base="tns:ctMailServer">
				<sequence>
					<element maxOccurs="1" minOccurs="1" name="type">
						<annotation>
							<documentation>This holds the type for the mailbox to poll. It
								should be either POP3 or IMAP.</documentation>
						</annotation>
						<simpleType>
							<restriction base="string">
								<enumeration value="POP3" />
								<enumeration value="IMAP" />
							</restriction>
						</simpleType>
					</element>
					<element maxOccurs="1" minOccurs="0" name="pollinterval"
						type="int">
						<annotation>
							<documentation>Holds the interval between polling cycles.
							</documentation>
						</annotation>
					</element>
					<element maxOccurs="1" minOccurs="1" name="folders" type="tns:ctFolders" />
					<element maxOccurs="1" minOccurs="0" name="actions" type="tns:ctActions" />
					<element maxOccurs="1" minOccurs="0" name="triggers" type="tns:ctTriggers" />
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<complexType name="ctFolders">
		<sequence>
			<element maxOccurs="unbounded" minOccurs="1" name="folder"
				type="string" />
		</sequence>
	</complexType>
	<complexType name="ctTriggers">
		<sequence>
			<element maxOccurs="unbounded" minOccurs="1" name="trigger"
				type="tns:ctTrigger" />
		</sequence>
	</complexType>
	<complexType name="ctTrigger">
		<sequence>
			<element maxOccurs="1" minOccurs="1" name="name">
				<simpleType>
					<restriction base="string">
						<maxLength value="150"></maxLength>
					</restriction>
				</simpleType>
			</element>
			<element maxOccurs="1" minOccurs="0" name="description" type="string" />
			<element maxOccurs="1" minOccurs="0" name="combineemails"
				type="boolean" />
			<element name="priority" type="int" maxOccurs="1" minOccurs="0" />
			<element maxOccurs="1" minOccurs="1" name="rules" type="tns:ctRules" />
			<element maxOccurs="1" minOccurs="1" name="message" type="tns:ctMessage" />
			<element maxOccurs="1" minOccurs="0" name="events" type="tns:ctEvents" />
		</sequence>
		<attribute name="appliesTo" type="string">
			<annotation>
				<documentation>Holds the folders this trigger applies to. In case of
					IMAP the trigger could apply to multiple folders. If so, separate
					the folder names using a comma.</documentation>
			</annotation>
		</attribute>
		<attribute name="onetimeonly" type="boolean" use="optional">
			<annotation>
				<documentation>Indicates whether or not this trigger is a
					one-time-only trigger. All dynamic triggers are supposed to be one
					time only.</documentation>
			</annotation>
		</attribute>
	</complexType>
	<complexType name="ctRules">
		<annotation>
			<documentation>This tag holds the rules to apply to the emails.
			</documentation>
		</annotation>
		<sequence>
			<element maxOccurs="unbounded" minOccurs="1" name="rule"
				type="tns:ctRule" />
		</sequence>
	</complexType>
	<complexType name="ctRule">
		<annotation>
			<documentation>This type holds the information for a specific rule. A
				rule applies to a section and 1 or more pattern should be matched.
			</documentation>
		</annotation>
		<sequence>
			<element maxOccurs="1" minOccurs="0" name="namespacemappings"
				type="tns:ctNamespaceMappings" />
			<element maxOccurs="unbounded" minOccurs="1" name="pattern"
				type="tns:ctPattern" />
		</sequence>
		<attribute name="section" type="tns:stRuleSection">
			<annotation>
				<documentation>Holds the section to which this rule should be
					evaluated.</documentation>
			</annotation>
		</attribute>
	</complexType>
	<complexType name="ctPattern">
		<annotation>
			<documentation>This type holds the definition of a pattern
			</documentation>
		</annotation>
		<sequence>
			<element maxOccurs="1" minOccurs="0" name="name" type="string">
				<annotation>
					<documentation>The name for the pattern. This is used i.e. for the
						name of the header</documentation>
				</annotation>
			</element>
			<element maxOccurs="1" minOccurs="1" name="value" type="string">
				<annotation>
					<documentation>Holds the value for the pattern. Usually a regular
						expression</documentation>
				</annotation>
			</element>
			<element maxOccurs="1" minOccurs="0" name="custom">
				<annotation>
					<documentation>Holds the configuration XML of the custom pattern
						that should be executed</documentation>
				</annotation>
				<complexType>
					<sequence>
						<any processContents="skip" />
					</sequence>
				</complexType>
			</element>
			<element maxOccurs="1" minOccurs="0" name="replacement" type="tns:ctReplacement">
				<annotation>
					<documentation>Holds the replacement tokens for this pattern
					</documentation>
				</annotation>
			</element>
			<element maxOccurs="1" minOccurs="0" name="store" type="tns:ctStore">
				<annotation>
					<documentation>Holds the storage tokens for this pattern
					</documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="type" type="tns:stPatternType">
			<annotation>
				<documentation>Holds the type of pattern</documentation>
			</annotation>
		</attribute>
		<attribute name="optional" type="boolean">
			<annotation>
				<documentation>Holds whether or not this pattern is optional. When
					set to optional it means that even though an email does not match
					this pattern it is still possible that the email matches the rule
					(and thus the trigger)</documentation>
			</annotation>
		</attribute>
	</complexType>
	<complexType name="ctReplacement">
		<annotation>
			<documentation>This type holds the list of replacement tokens
			</documentation>
		</annotation>
		<sequence>
			<element maxOccurs="unbounded" minOccurs="1" name="token"
				type="tns:ctReplacementToken" />
		</sequence>
	</complexType>
	<complexType name="ctStore">
		<annotation>
			<documentation>This type holds the list of storage tokens.
			</documentation>
		</annotation>
		<sequence>
			<element maxOccurs="unbounded" minOccurs="1" name="token"
				type="tns:ctStoreToken" />
		</sequence>
	</complexType>
	<complexType name="ctReplacementToken">
		<annotation>
			<documentation>This type defines a replacement token.</documentation>
		</annotation>
		<sequence>
			<element maxOccurs="1" minOccurs="1" name="name" type="string">
				<annotation>
					<documentation>Holds the name for the replacement token
					</documentation>
				</annotation>
			</element>
			<element maxOccurs="1" minOccurs="1" name="value"
				type="tns:ctReplacementTokenValue">
				<annotation>
					<documentation>Holds the value for the replacement token.
					</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="ctStoreToken">
		<sequence>
			<element maxOccurs="1" minOccurs="1" name="name" type="string">
				<annotation>
					<documentation>Holds the name of the storage token.</documentation>
				</annotation>
			</element>
			<element maxOccurs="1" minOccurs="1" name="value"
				type="tns:ctStoreTokenValue">
				<annotation>
					<documentation>Holds the value for the storage token
					</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<complexType name="ctReplacementTokenValue">
		<annotation>
			<documentation>This type is there to have a tag with a string value
				and an additional attribute src. The String content holds the actual
				replacement pattern.</documentation>
		</annotation>
		<simpleContent>
			<extension base="string">
				<attribute name="src" type="tns:stReplacementTokenValueSrc">
					<annotation>
						<documentation>This holds the name of the variable in the Rule
							Context</documentation>
					</annotation>
				</attribute>
			</extension>
		</simpleContent>
	</complexType>
	<complexType name="ctStoreTokenValue">
		<simpleContent>
			<extension base="string">
				<attribute name="src" type="tns:stStoreTokenValueSrc" />
			</extension>
		</simpleContent>
	</complexType>
	<complexType name="ctMessage">
		<sequence>
			<element maxOccurs="1" minOccurs="1" name="method" type="string" />
			<element maxOccurs="1" minOccurs="1" name="namespace" type="string" />
			<element maxOccurs="1" minOccurs="0" name="user" type="string" />
			<element maxOccurs="1" minOccurs="0" name="sync" type="boolean" />
			<element maxOccurs="1" minOccurs="0" name="repeatingxpath"
				type="string" />
			<element maxOccurs="1" minOccurs="0" name="organization"
				type="string" />
			<element maxOccurs="1" minOccurs="0" name="soapdn" type="string" />
			<element maxOccurs="1" minOccurs="0" name="timeout" type="long" />
			<element maxOccurs="1" minOccurs="0" name="namespacemappings"
				type="tns:ctNamespaceMappings" />
			<element maxOccurs="1" minOccurs="0" name="input">
				<complexType>
					<sequence>
						<any maxOccurs="unbounded" minOccurs="0" processContents="skip" />
					</sequence>
				</complexType>
			</element>
			<element maxOccurs="1" minOccurs="0" name="mappings" type="tns:ctMappings" />
		</sequence>
	</complexType>
	<complexType name="ctMappings">
		<sequence>
			<element maxOccurs="unbounded" minOccurs="1" name="mapping"
				type="tns:ctMapping" />
		</sequence>
	</complexType>
	<complexType name="ctMapping">
		<sequence>
			<element maxOccurs="1" minOccurs="1" name="source" type="string" />
			<element maxOccurs="1" minOccurs="1" name="value"
				type="tns:ctMappingValue" />
		</sequence>
	</complexType>
	<complexType name="ctMappingValue">
		<attribute name="src" type="string" use="optional" />
		<attribute default="STRING_REPLACE" name="operation"
			type="tns:stMappingOperations" use="optional" />
		<attribute name="class" type="string" use="optional" />
	</complexType>

	<complexType name="ctInboundConfig">
		<annotation>
			<documentation>The inbound section contains all information for the
				inbound process.</documentation>
		</annotation>
		<all>
			<element maxOccurs="1" minOccurs="1" ref="tns:emailboxes">
				<annotation>
					<documentation>The emailboxes tag contains all email boxes that
						should be monitored.</documentation>
				</annotation>
			</element>
			<element maxOccurs="1" minOccurs="1" name="maxworkers" type="int">
				<annotation>
					<documentation>The maximum amount of worker threads that can send
						the actual SOAP messages. So you have a single thread per email
						box which monitors the email box for new messages. When a message
						matches the rules defined a SOAP message should be sent. The
						sending-part is done by a separate thread pool. And the amount of
						workers in that pool is what you configure here.</documentation>
				</annotation>
			</element>
		</all>
	</complexType>
	<simpleType name="stRuleSection">
		<restriction base="string">
			<enumeration value="FROM" />
			<enumeration value="TO" />
			<enumeration value="CC" />
			<enumeration value="HEADER" />
			<enumeration value="SUBJECT" />
			<enumeration value="MULTIPART" />
		</restriction>
	</simpleType>
	<simpleType name="stReplacementTokenValueSrc">
		<restriction base="string">
			<enumeration value="FIXED" />
			<enumeration value="STORAGE" />
		</restriction>
	</simpleType>
	<simpleType name="stStoreTokenValueSrc">
		<restriction base="string">
			<enumeration value="PATTERN" />
			<enumeration value="FIXED" />
		</restriction>
	</simpleType>
	<simpleType name="stPatternType">
		<restriction base="string">
			<enumeration value="REGEX" />
			<enumeration value="XPATH" />
			<enumeration value="HEADER" />
			<enumeration value="CUSTOM" />
		</restriction>
	</simpleType>
	<complexType name="ctNamespaceMappings">
		<sequence>
			<element maxOccurs="unbounded" minOccurs="1" name="namespacemapping"
				type="tns:ctNamespaceMapping" />
		</sequence>
	</complexType>
	<complexType name="ctNamespaceMapping">
		<sequence>
			<element name="prefix" type="string" />
			<element name="namespace" type="string" />
		</sequence>
	</complexType>
	<element name="trigger" type="tns:ctTrigger" />
	<simpleType name="stMappingOperations">
		<restriction base="string">
			<enumeration value="STRING_REPLACE" />
			<enumeration value="XML_APPEND_CHILD" />
			<enumeration value="XML_APPEND_CHILD_WITH_TARGET_NS" />
			<enumeration value="XML_REPLACE" />
			<enumeration value="XML_REPLACE_WITH_TARGET_NS" />
			<enumeration value="CUSTOM" />
		</restriction>
	</simpleType>
	<complexType name="ctActions">
		<sequence>
			<element maxOccurs="unbounded" minOccurs="1" name="action"
				type="tns:ctAction" />
		</sequence>
	</complexType>
	<complexType name="ctAction">
		<choice>
			<sequence>
				<element maxOccurs="1" minOccurs="1" name="sendmail" type="tns:ctSendMail" />
			</sequence>
			<sequence>
				<element maxOccurs="1" minOccurs="1" name="sendsoap" type="tns:ctMessage" />
			</sequence>
			<sequence>
				<element maxOccurs="1" minOccurs="1" name="custom"
					type="tns:ctCustomAction" />
			</sequence>
		</choice>
		<attribute name="id" type="string" use="required" />
		<attribute name="type" type="tns:stActionType" />
	</complexType>
	<simpleType name="stActionType">
		<restriction base="string">
			<enumeration value="SENDMAIL" />
			<enumeration value="SENDSOAP" />
			<enumeration value="CUSTOM" />
		</restriction>
	</simpleType>
	<complexType name="ctSendMail">
		<sequence>
			<element maxOccurs="1" minOccurs="1" name="host" type="string" />
			<element default="25" maxOccurs="1" minOccurs="1" name="port"
				type="int" />
			<element maxOccurs="1" minOccurs="0" name="username" type="string" />
			<element maxOccurs="1" minOccurs="0" name="password" type="string" />
			<element maxOccurs="1" minOccurs="1" name="fromaddress" type="string" />
			<element maxOccurs="1" minOccurs="1" name="toaddress" type="string" />
			<element maxOccurs="1" minOccurs="0" name="subject" type="string" />
			<element default="false" maxOccurs="1" minOccurs="0"
				name="retainoriginal" type="boolean" />
		</sequence>
	</complexType>
	<complexType name="ctCustomAction">
		<sequence>
			<element maxOccurs="1" minOccurs="1" name="class" type="string" />
			<element maxOccurs="1" minOccurs="0" name="configuration">
				<complexType>
					<sequence>
						<any maxOccurs="unbounded" minOccurs="0" processContents="skip" />
					</sequence>
				</complexType>
			</element>
		</sequence>
	</complexType>
	<complexType name="ctEvents">
		<sequence>
			<element maxOccurs="unbounded" minOccurs="1" name="event"
				type="tns:ctEvent" />
		</sequence>
	</complexType>
	<complexType name="ctEvent">
		<sequence>
			<element maxOccurs="unbounded" minOccurs="0" name="actionref"
				type="tns:ctActionRef" />
			<element maxOccurs="unbounded" minOccurs="0" name="action"
				type="tns:ctAction" />
		</sequence>
		<attribute name="type" type="tns:stEventType" />
	</complexType>
	<complexType name="ctActionRef">
		<attribute name="id" type="string" use="required" />
	</complexType>
	<simpleType name="stEventType">
		<restriction base="string">
			<enumeration value="SUCCESS" />
			<enumeration value="ERROR" />
		</restriction>
	</simpleType>
	<complexType name="ctCustomClassImpl">
		<all>
			<element maxOccurs="1" minOccurs="1" name="class" type="string" />
			<element maxOccurs="1" minOccurs="0" name="parameters"
				type="tns:ctCustomClassImplParameters" />
		</all>
	</complexType>
	<complexType name="ctCustomClassImplParameters">
		<choice>
			<element maxOccurs="unbounded" minOccurs="0" name="parameter">
				<complexType mixed="true">
					<sequence>
						<any maxOccurs="unbounded" minOccurs="0" processContents="skip" />
					</sequence>
					<attribute name="name" type="string" use="required">
						<annotation>
							<documentation>The name for the parameter</documentation>
						</annotation>
					</attribute>
					<attribute name="type" type="tns:stCustomClassImplParameterType"
						use="required">
						<annotation>
							<documentation>The type for this parameter</documentation>
						</annotation>
					</attribute>
				</complexType>
			</element>
		</choice>
	</complexType>
	<simpleType name="stCustomClassImplParameterType">
		<restriction base="string">
			<enumeration value="string">
				<annotation>
					<documentation>The parameter is a simple string value
					</documentation>
				</annotation>
			</enumeration>
			<enumeration value="xml">
				<annotation>
					<documentation>The value is a nested XML structure.</documentation>
				</annotation>
			</enumeration>
		</restriction>
	</simpleType>

	<complexType name="ctConfiguration">
		<annotation>
			<documentation>This type is a container for the 3 main sections:
				inbound, outbound and general</documentation>
		</annotation>
		<sequence>
			<element name="inbound" type="tns:ctInboundConfig" maxOccurs="1"
				minOccurs="0">
			</element>
			<element name="outbound" type="tns:ctOutboundConfig"
				maxOccurs="1" minOccurs="0">
			</element>
			<element name="general" type="tns:ctGeneral" maxOccurs="1"
				minOccurs="0"></element>
		</sequence>
	</complexType>

	<complexType name="ctOutboundConfig">
		<all>
			<element name="keymanagers" type="tns:ctKeyManagers"
				maxOccurs="1" minOccurs="0">
			</element>

			<element name="smtpservers" type="tns:ctSMTPServers"
				maxOccurs="1" minOccurs="0">
			</element>
			<element name="smimeenabled" type="boolean" maxOccurs="1"
				minOccurs="0">
			</element>
			<element name="signmails" type="boolean" maxOccurs="1"
				minOccurs="0">
			</element>
			<element name="encryptmails" type="boolean" maxOccurs="1"
				minOccurs="0">
			</element>
			<element name="checkcrl" type="boolean" maxOccurs="1"
				minOccurs="0">
			</element>
			<element name="bypasssmime" type="boolean" maxOccurs="1"
				minOccurs="0">
			</element>
			<element name="domains" type="tns:ctDomains" maxOccurs="1"
				minOccurs="0">
			</element>
		</all>
	</complexType>

	<complexType name="ctKeyManagers">
		<sequence>
			<element name="keymanager" type="tns:ctKeyManager" maxOccurs="unbounded"
				minOccurs="0"></element>
		</sequence>
	</complexType>

	<complexType name="ctSMTPServers">
		<sequence>
			<element name="smtpserver" type="tns:ctSMTPServer" maxOccurs="unbounded"
				minOccurs="0"></element>
		</sequence>
	</complexType>

	<complexType name="ctKeyManager">
		<all>
			<element name="name" type="string" maxOccurs="1" minOccurs="1"></element>
			<element maxOccurs="1" minOccurs="1" name="class" type="string" />
			<element maxOccurs="1" minOccurs="0" name="parameters"
				type="tns:ctCustomClassImplParameters" />
		</all>
	</complexType>

	<complexType name="ctSMTPServer">
		<complexContent>
			<extension base="tns:ctMailServer">
				<sequence>
					<element name="useconnectionpool" type="boolean" maxOccurs="1"
						minOccurs="0" default="false">
					</element>
					<element name="maxconnections" type="int" maxOccurs="1"
						minOccurs="0">
					</element>
					<element name="connectiontimeout" type="long" maxOccurs="1"
						minOccurs="0"></element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="ctGeneral">
		<sequence>
			<element name="storage" type="tns:ctStorage"></element>
		</sequence>
	</complexType>

	<complexType name="ctStorage">
		<complexContent>
			<extension base="tns:ctCustomClassImpl"></extension>
		</complexContent>
	</complexType>

	<complexType name="ctMailServer">
		<sequence>
			<element name="name" maxOccurs="1" minOccurs="1">
				<simpleType>
					<restriction base="string">
						<maxLength value="50"></maxLength>
					</restriction>
				</simpleType>
			</element>
			<element name="host" type="string" maxOccurs="1" minOccurs="1">
			</element>
			<element name="port" type="int" maxOccurs="1" minOccurs="1">
			</element>
			<element name="ssl" type="boolean" maxOccurs="1" minOccurs="0"
				default="false">
			</element>
			<element name="username" type="string" maxOccurs="1"
				minOccurs="0">
			</element>
			<element name="password" type="string" maxOccurs="1"
				minOccurs="0">
			</element>
		</sequence>
	</complexType>

	<complexType name="ctDomains">
		<sequence>
			<element name="sending" type="tns:ctDomainList"></element>
			<element name="receiving" type="tns:ctDomainList"></element>
		</sequence>
	</complexType>

	<simpleType name="stDefaultBehavior">
		<restriction base="string">
			<enumeration value="ALLOWED_ONLY">
				<annotation>
					<documentation>This means that only domains explicitly mentioned
						will be allowed. All domains not mentioned will be blocked.
					</documentation>
				</annotation>
			</enumeration>
			<enumeration value="ALLOW_ALL">
				<annotation>
					<documentation>Allow </documentation>
				</annotation>
			</enumeration>
		</restriction>
	</simpleType>

	<complexType name="ctDomainList">
		<sequence>
			<element name="domain" type="string" maxOccurs="unbounded"
				minOccurs="0">
			</element>
		</sequence>
		<attribute name="behavior" type="tns:stDefaultBehavior"></attribute>
		<attribute name="throwSoapFault" type="boolean" default="true">
			<annotation>
				<documentation>When set to true a SOAP fault will be thrown when
					sending a mail is denied due to the settings.</documentation>
			</annotation>
		</attribute>
	</complexType>
</schema>