/**
 * Copyright 2005 Cordys R&D B.V. 
 * 
 * This file is part of the Cordys SAP Connector. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 /**
 * Copyright 2005 Cordys R&D B.V. 
 * 
 * This file is part of the Cordys SAP Connector. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 package com.cordys.coe.ac.emailio.localization;

import com.eibus.localization.message.Message;
import com.eibus.localization.message.MessageSet;

/**
 * This code is generated by running com.cordys.coe.cep.wizards.localization.CoEMessageGenerator.
 */
public class TriggerEngineExceptionMessages
{
    /**
     * Holds the definition of the message set.
     */
    public static final MessageSet MESSAGE_SET = MessageSet.getMessageSet("com.cordys.coe.ac.emailio.exception.TriggerEngineException");

    /**
     * Holds the definition of the message with ID TEE_COULD_NOT_FIND_THE_XPATH_IN_THE_GIVEN_XML.
     * Message text: Could not find the XPath {0} in the given XML: {1}
     */
    public static final Message TEE_COULD_NOT_FIND_THE_XPATH_IN_THE_GIVEN_XML = MESSAGE_SET
                                                                                .getMessage("TEE_COULD_NOT_FIND_THE_XPATH_IN_THE_GIVEN_XML");
    /**
     * Holds the definition of the message with ID
     * TEE_COULD_NOT_FIND_THE_VALUE_WITH_NAME_IN_THE_RULE_CONTEXT. Message text: Could not find the
     * value with name {0} in the rule context.
     */
    public static final Message TEE_COULD_NOT_FIND_THE_VALUE_WITH_NAME_IN_THE_RULE_CONTEXT = MESSAGE_SET
                                                                                             .getMessage("TEE_COULD_NOT_FIND_THE_VALUE_WITH_NAME_IN_THE_RULE_CONTEXT");
    /**
     * Holds the definition of the message with ID TEE_EMG_ERROR_GETTING_THE_VALUE_FOR_THE_FIELD.
     * Message text: Error getting the value for the field.
     */
    public static final Message TEE_EMG_ERROR_GETTING_THE_VALUE_FOR_THE_FIELD = MESSAGE_SET
                                                                                .getMessage("TEE_EMG_ERROR_GETTING_THE_VALUE_FOR_THE_FIELD");
    /**
     * Holds the definition of the message with ID TEE_SFA_ERROR_GETTING_THE_FROM_ADDRESS. Message
     * text: Error getting the from address.
     */
    public static final Message TEE_SFA_ERROR_GETTING_THE_FROM_ADDRESS = MESSAGE_SET.getMessage("TEE_SFA_ERROR_GETTING_THE_FROM_ADDRESS");
    /**
     * Holds the definition of the message with ID TEE_SFA_ERROR_THERE_IS_NO_FROM_ADDRESS_AVAILABLE.
     * Message text: There is no from address available.
     */
    public static final Message TEE_SFA_ERROR_THERE_IS_NO_FROM_ADDRESS_AVAILABLE = MESSAGE_SET
                                                                                   .getMessage("TEE_SFA_ERROR_THERE_IS_NO_FROM_ADDRESS_AVAILABLE");
    /**
     * Holds the definition of the message with ID
     * TEE_SFA_ERROR_THE_FROM_ADDRESS_MUST_BE_AN_INTERNET_ADDRESS_THIS_ADDRESS_IS_OF_CLASS_0.
     * Message text: The from address must be an Internet Address. This address is of class {0}
     */
    public static final Message TEE_SFA_ERROR_THE_FROM_ADDRESS_MUST_BE_AN_INTERNET_ADDRESS_THIS_ADDRESS_IS_OF_CLASS_0 = MESSAGE_SET
                                                                                                                        .getMessage("TEE_SFA_ERROR_THE_FROM_ADDRESS_MUST_BE_AN_INTERNET_ADDRESS_THIS_ADDRESS_IS_OF_CLASS_0");
    /**
     * Holds the definition of the message with ID TEE_SFA_INCORRECT_NUMBER_OF_STORAGE_TOKENS.
     * Message text: Incorrect number of storage tokens specified. Expecting {0} and only got {1}
     */
    public static final Message TEE_SFA_INCORRECT_NUMBER_OF_STORAGE_TOKENS = MESSAGE_SET.getMessage("TEE_SFA_INCORRECT_NUMBER_OF_STORAGE_TOKENS");
    /**
     * Holds the definition of the message with ID TEE_SRMC_A_STORAGE_TOKEN_MUST_BE_SUPPLIED.
     * Message text: A storage token must be supplied
     */
    public static final Message TEE_SRMC_A_STORAGE_TOKEN_MUST_BE_SUPPLIED = MESSAGE_SET.getMessage("TEE_SRMC_A_STORAGE_TOKEN_MUST_BE_SUPPLIED");
    /**
     * Holds the definition of the message with ID
     * TEE_SRMC_ERROR_STORING_THE_FULL_MAIL_IN_THE_RULE_CONTEXT. Message text: Error storing the
     * full mail in the rule context
     */
    public static final Message TEE_SRMC_ERROR_STORING_THE_FULL_MAIL_IN_THE_RULE_CONTEXT = MESSAGE_SET
                                                                                           .getMessage("TEE_SRMC_ERROR_STORING_THE_FULL_MAIL_IN_THE_RULE_CONTEXT");
    /**
     * Holds the definition of the message with ID
     * TEE_THE_VALUE_FOR_FIELD__CANNOT_BE_REPLACED_BECAUSE_ITS_NOT_A_STRING_VALUE. Message text: The
     * value for field {0} cannot be replaced because it's not a String value.
     */
    public static final Message TEE_THE_VALUE_FOR_FIELD__CANNOT_BE_REPLACED_BECAUSE_ITS_NOT_A_STRING_VALUE = MESSAGE_SET
                                                                                                             .getMessage("TEE_THE_VALUE_FOR_FIELD__CANNOT_BE_REPLACED_BECAUSE_ITS_NOT_A_STRING_VALUE");
    /**
     * Holds the definition of the message with ID TEE_THE_VALUE_CAN_NOT_BE_NULL. Message text: The
     * value can not be null.
     */
    public static final Message TEE_THE_VALUE_CAN_NOT_BE_NULL = MESSAGE_SET.getMessage("TEE_THE_VALUE_CAN_NOT_BE_NULL");
    /**
     * Holds the definition of the message with ID TEE_THE_TYPE_GIVEN_IS_NOT_SUPPORTED. Message
     * text: The type given is not supported: {0}
     */
    public static final Message TEE_THE_TYPE_GIVEN_IS_NOT_SUPPORTED = MESSAGE_SET.getMessage("TEE_THE_TYPE_GIVEN_IS_NOT_SUPPORTED");
    /**
     * Holds the definition of the message with ID
     * TEE_THE_VALUE_OF_A_STORE_TOKEN_FOR_A_REGEX_MUST_BE_AN_INTEGER. Message text: The value of a
     * store token for a regex must be an integer: {0}
     */
    public static final Message TEE_THE_VALUE_OF_A_STORE_TOKEN_FOR_A_REGEX_MUST_BE_AN_INTEGER = MESSAGE_SET
                                                                                                .getMessage("TEE_THE_VALUE_OF_A_STORE_TOKEN_FOR_A_REGEX_MUST_BE_AN_INTEGER");
    /**
     * Holds the definition of the message with ID TEE_THE_XML_COULD_NOT_BE_PARSED. Message text:
     * The XML could not be parsed: {0}
     */
    public static final Message TEE_THE_XML_COULD_NOT_BE_PARSED = MESSAGE_SET.getMessage("TEE_THE_XML_COULD_NOT_BE_PARSED");
    /**
     * Holds the definition of the message with ID
     * TEE_THE_RESULT_OF_EXPRESSION_IS_NOT_AN_ELEMENT_SO_WE_CANNOT_STORE_IT_AS_XML. Message text:
     * The result of expression {0} is not an element, so we cannot store it as XML.
     */
    public static final Message TEE_THE_RESULT_OF_EXPRESSION_IS_NOT_AN_ELEMENT_SO_WE_CANNOT_STORE_IT_AS_XML = MESSAGE_SET
                                                                                                              .getMessage("TEE_THE_RESULT_OF_EXPRESSION_IS_NOT_AN_ELEMENT_SO_WE_CANNOT_STORE_IT_AS_XML");
    /**
     * Holds the definition of the message with ID
     * TEETHE_RESULT_OF_EXPRESSION_IS_A_NULL_STRING_VALUE. Message text: The result of expression
     * {0} is a null string value.
     */
    public static final Message TEETHE_RESULT_OF_EXPRESSION_IS_A_NULL_STRING_VALUE = MESSAGE_SET
                                                                                     .getMessage("TEETHE_RESULT_OF_EXPRESSION_IS_A_NULL_STRING_VALUE");
    /**
     * Holds the definition of the message with ID TEE_THE_STORE_TYPE_MUST_BE_EITHER_XML_OR_VALUE.
     * Message text: The store type {0} must be either xml or value.
     */
    public static final Message TEE_THE_STORE_TYPE_MUST_BE_EITHER_XML_OR_VALUE = MESSAGE_SET
                                                                                 .getMessage("TEE_THE_STORE_TYPE_MUST_BE_EITHER_XML_OR_VALUE");
    /**
     * Holds the definition of the message with ID TEE_ERROR_CHECKING_THE_DELETED_FLAG. Message
     * text: Error checking the deleted flag
     */
    public static final Message TEE_ERROR_CHECKING_THE_DELETED_FLAG = MESSAGE_SET.getMessage("TEE_ERROR_CHECKING_THE_DELETED_FLAG");
    /**
     * Holds the definition of the message with ID TEEERROR_GETTING_THE_VALUE_FOR_SECTION. Message
     * text: Error getting the value for section {0}
     */
    public static final Message TEEERROR_GETTING_THE_VALUE_FOR_SECTION = MESSAGE_SET.getMessage("TEEERROR_GETTING_THE_VALUE_FOR_SECTION");
    /**
     * Holds the definition of the message with ID TEE_UNSUPPORTED_EMAIL_CONTENT. Message text:
     * Unsupported email content: {0}
     */
    public static final Message TEE_UNSUPPORTED_EMAIL_CONTENT = MESSAGE_SET.getMessage("TEE_UNSUPPORTED_EMAIL_CONTENT");
    /**
     * Holds the definition of the message with ID TEE_ERROR_GETTING_THE_VALUE_FOR_SECTION. Message
     * text: Error getting the value for section {0}
     */
    public static final Message TEE_ERROR_GETTING_THE_VALUE_FOR_SECTION = MESSAGE_SET.getMessage("TEE_ERROR_GETTING_THE_VALUE_FOR_SECTION");
    /**
     * Holds the definition of the message with ID TEE_INVALID_SIMPLE_TYPE. Message text: Invalid
     * simple type
     */
    public static final Message TEE_INVALID_SIMPLE_TYPE = MESSAGE_SET.getMessage("TEE_INVALID_SIMPLE_TYPE");
    /**
     * Holds the definition of the message with ID TEE_ERROR_DELETING_MESSAGES_FROM_THE_SERVER.
     * Message text: Error deleting messages from the server.
     */
    public static final Message TEE_ERROR_DELETING_MESSAGES_FROM_THE_SERVER = MESSAGE_SET
                                                                              .getMessage("TEE_ERROR_DELETING_MESSAGES_FROM_THE_SERVER");
    /**
     * Holds the definition of the message with ID
     * TEE_COULD_NOT_FIND_THE_NODE_REFLECTED_BY_XPATH_IN_THE_XML_STRUCTURE. Message text: Could not
     * find the node reflected by xpath {0} in the XML structure: {1}
     */
    public static final Message TEE_COULD_NOT_FIND_THE_NODE_REFLECTED_BY_XPATH_IN_THE_XML_STRUCTURE = MESSAGE_SET
                                                                                                      .getMessage("TEE_COULD_NOT_FIND_THE_NODE_REFLECTED_BY_XPATH_IN_THE_XML_STRUCTURE");
    /**
     * Holds the definition of the message with ID TEE_ERROR_CREATING_INPUT_XML_STRUCTURE. Message
     * text: Error creating input XML structure
     */
    public static final Message TEE_ERROR_CREATING_INPUT_XML_STRUCTURE = MESSAGE_SET.getMessage("TEE_ERROR_CREATING_INPUT_XML_STRUCTURE");
    /**
     * Holds the definition of the message with ID
     * TEE_COULD_NOT_CREATE_FILE_IN_THE_ARCHIVE_FOLDER_0. Message text: Could not create file in the
     * archive folder {0}
     */
    public static final Message TEE_COULD_NOT_CREATE_FILE_IN_THE_ARCHIVE_FOLDER_0 = MESSAGE_SET
                                                                                    .getMessage("TEE_COULD_NOT_CREATE_FILE_IN_THE_ARCHIVE_FOLDER_0");
    /**
     * Holds the definition of the message with ID TEE_ERROR_EXECUTING_PROPER_MAPPINGS. Message
     * text: Error executing the custom email mapping
     */
    public static final Message TEE_ERROR_EXECUTING_PROPER_MAPPINGS = MESSAGE_SET.getMessage("TEE_ERROR_EXECUTING_PROPER_MAPPINGS");
    /**
     * Holds the definition of the message with ID
     * TEE_COULD_NOT_WRITE_ALL_MESSAGES_TO_THE_ERRORINPROGRESS_FOLDER. Message text: Could not write
     * all messages to the error/inprogress folder: {0}
     */
    public static final Message TEE_COULD_NOT_WRITE_ALL_MESSAGES_TO_THE_ERRORINPROGRESS_FOLDER = MESSAGE_SET
                                                                                                 .getMessage("TEE_COULD_NOT_WRITE_ALL_MESSAGES_TO_THE_ERRORINPROGRESS_FOLDER");
    /**
     * Holds the definition of the message with ID TEE_COULD_NOT_CREATE_FILE_IN_THE_ERROR_FOLDER.
     * Message text: Could not create file in the error folder {0}
     */
    public static final Message TEE_COULD_NOT_CREATE_FILE_IN_THE_ERROR_FOLDER = MESSAGE_SET
                                                                                .getMessage("TEE_COULD_NOT_CREATE_FILE_IN_THE_ERROR_FOLDER");
}
