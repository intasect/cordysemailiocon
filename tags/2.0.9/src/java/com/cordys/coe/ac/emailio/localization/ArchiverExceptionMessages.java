/**
 * Copyright 2005 Cordys R&D B.V. 
 * 
 * This file is part of the Cordys SAP Connector. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 /**
 * Copyright 2005 Cordys R&D B.V. 
 * 
 * This file is part of the Cordys SAP Connector. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 package com.cordys.coe.ac.emailio.localization;

import com.eibus.localization.message.Message;
import com.eibus.localization.message.MessageSet;

/**
 * This code is generated by running com.cordys.coe.cep.wizards.localization.CoEMessageGenerator.
 */
public class ArchiverExceptionMessages
{
    /**
     * Holds the definition of the message set.
     */
    public static final MessageSet MESSAGE_SET = MessageSet.getMessageSet("com.cordys.coe.ac.emailio.exception.ArchiverException");

    /**
     * Holds the definition of the message with ID
     * ARE_COULD_NOT_FIND_THE_DATABASE_CONNECTION_POOL_CONFIGURATION. Message text: Could not find
     * the database connection pool configuration.
     */
    public static final Message ARE_COULD_NOT_FIND_THE_DATABASE_CONNECTION_POOL_CONFIGURATION = MESSAGE_SET
                                                                                                .getMessage("ARE_COULD_NOT_FIND_THE_DATABASE_CONNECTION_POOL_CONFIGURATION");
    /**
     * Holds the definition of the message with ID
     * ARE_COULD_NOT_GET_THE_DETAILS_OF_EMAIL_BOX_0_FROM_THE_STORAGE_PROVIDER. Message text: Could
     * not get the details of email box {0} from the storage provider ({1})
     */
    public static final Message ARE_COULD_NOT_GET_THE_DETAILS_OF_EMAIL_BOX_0_FROM_THE_STORAGE_PROVIDER = MESSAGE_SET
                                                                                                         .getMessage("ARE_COULD_NOT_GET_THE_DETAILS_OF_EMAIL_BOX_0_FROM_THE_STORAGE_PROVIDER");
    /**
     * Holds the definition of the message with ID ARE_ERROR_ARCHIVING_CONTAINER_0. Message text:
     * Error archiving container {0}
     */
    public static final Message ARE_ERROR_ARCHIVING_CONTAINER_0 = MESSAGE_SET.getMessage("ARE_ERROR_ARCHIVING_CONTAINER_0");
    /**
     * Holds the definition of the message with ID ARE_ERROR_ARCHIVING_MESSAGES. Message text: Error
     * archiving messages
     */
    public static final Message ARE_ERROR_ARCHIVING_MESSAGES = MESSAGE_SET.getMessage("ARE_ERROR_ARCHIVING_MESSAGES");
    /**
     * Holds the definition of the message with ID
     * ARE_ERROR_REMOVING_CONTEXT_CONTAINER_0_FROM_THE_STORAGE. Message text: Error removing context
     * container {0} from the storage.
     */
    public static final Message ARE_ERROR_REMOVING_CONTEXT_CONTAINER_0_FROM_THE_STORAGE = MESSAGE_SET
                                                                                          .getMessage("ARE_ERROR_REMOVING_CONTEXT_CONTAINER_0_FROM_THE_STORAGE");
    /**
     * Holds the definition of the message with ID ARE_ERROR_ZIPPING_ALL_ARCHIVE_FILES. Message
     * text: Error zipping all archive files.
     */
    public static final Message ARE_ERROR_ZIPPING_ALL_ARCHIVE_FILES = MESSAGE_SET.getMessage("ARE_ERROR_ZIPPING_ALL_ARCHIVE_FILES");
    /**
     * Holds the definition of the message with ID ARE_INVALID_ARCHIVE_DATABASE. Message text:
     * Invalid archive database
     */
    public static final Message ARE_INVALID_ARCHIVE_DATABASE = MESSAGE_SET.getMessage("ARE_INVALID_ARCHIVE_DATABASE");
    /**
     * Holds the definition of the message with ID ARE_TABLE_ARC_CONTEXT_CONTAINER_DOES_NOT_EXISTN0.
     * Message text: Table ARC_CONTEXT_CONTAINER does not exist:\n{0}
     */
    public static final Message ARE_TABLE_ARC_CONTEXT_CONTAINER_DOES_NOT_EXISTN0 = MESSAGE_SET
                                                                                   .getMessage("ARE_TABLE_ARC_CONTEXT_CONTAINER_DOES_NOT_EXISTN0");
    /**
     * Holds the definition of the message with ID ARE_TABLE_ARC_EMAIL_DOES_NOT_EXISTN0. Message
     * text: Table ARC_EMAIL does not exist.\n{0}
     */
    public static final Message ARE_TABLE_ARC_EMAIL_DOES_NOT_EXISTN0 = MESSAGE_SET.getMessage("ARE_TABLE_ARC_EMAIL_DOES_NOT_EXISTN0");
    /**
     * Holds the definition of the message with ID ERROR_GETTING_THE_CONTAINERS_TO_ARCHIVE. Message
     * text: Error getting the containers to archive. Search criteria: EmailBoxID: {0}
     * ProcessingStatus: {1} FromCreateDate: {2,date} ToCreateDate: {3,date} FromCompleteDate:
     * {4,date} ToCompleteDate: {5,date} FromStatusChangeDate: {6,date} ToStatusChangeDate: {7,date}
     */
    public static final Message ERROR_GETTING_THE_CONTAINERS_TO_ARCHIVE = MESSAGE_SET.getMessage("ERROR_GETTING_THE_CONTAINERS_TO_ARCHIVE");
    /**
     * Holds the definition of the message with ID ARE_ERROR_INSTANTIATING_CLASS. Message text:
     * Error instantiating class {0}
     */
    public static final Message ARE_ERROR_INSTANTIATING_CLASS = MESSAGE_SET.getMessage("ARE_ERROR_INSTANTIATING_CLASS");
    /**
     * Holds the definition of the message with ID ARE_THE_CLASS_0_DOES_NOT_IMPLEMENT_INTERFACE.
     * Message text: The class {0} does not implement interface {1}
     */
    public static final Message ARE_THE_CLASS_0_DOES_NOT_IMPLEMENT_INTERFACE = MESSAGE_SET
                                                                               .getMessage("ARE_THE_CLASS_0_DOES_NOT_IMPLEMENT_INTERFACE");
    /**
     * Holds the definition of the message with ID ARE_COULD_NOT_LOAD_CLASS_0. Message text: Could
     * not load class {0}
     */
    public static final Message ARE_COULD_NOT_LOAD_CLASS_0 = MESSAGE_SET.getMessage("ARE_COULD_NOT_LOAD_CLASS_0");
}
