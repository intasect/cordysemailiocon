/*
 * This class has been generated by the Code Generator
 */

package com.cordys.coe.ac.emailio.storage.db;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;

/**
 * DOCUMENTME.
 *
 * @author  $author$
 */
public abstract class DBContextContainerBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    /**
     * tags used in the XML document.
     */
    public static final String ATTR_CONTEXT_CONTAINER_ID = "CONTEXT_CONTAINER_ID";
    /**
     * DOCUMENTME.
     */
    public static final String ATTR_EMAILBOX = "EMAILBOX";
    /**
     * DOCUMENTME.
     */
    public static final String ATTR_PROCESSING_STATUS = "PROCESSING_STATUS";
    /**
     * DOCUMENTME.
     */
    public static final String ATTR_STATUS_INFORMATION = "STATUS_INFORMATION";
    /**
     * DOCUMENTME.
     */
    public static final String ATTR_TRIGGER_DEFINITION = "TRIGGER_DEFINITION";
    /**
     * DOCUMENTME.
     */
    public static final String ATTR_CREATE_DATE = "CREATE_DATE";
    /**
     * DOCUMENTME.
     */
    public static final String ATTR_STATUS_CHANGE_DATE = "STATUS_CHANGE_DATE";
    /**
     * DOCUMENTME.
     */
    public static final String ATTR_COMPLETE_DATE = "COMPLETE_DATE";
    /**
     * DOCUMENTME.
     */
    private static final String REL_EMAILObjects = "FK:CONTEXT_CONTAINER[CONTEXT_CONTAINER_ID]:EMAIL[CONTEXT_CONTAINER]";
    /**
     * DOCUMENTME.
     */
    private static final String REL_EMAILBOXObject = "FK:CONTEXT_CONTAINER[EMAILBOX]:EMAIL_BOX[EMAILBOX_ID]";
    /**
     * DOCUMENTME.
     */
    private static ClassInfo s_classInfo = null;

    /**
     * Creates a new DBContextContainerBase object.
     *
     * @param  config  DOCUMENTME
     */
    public DBContextContainerBase(BusObjectConfig config)
    {
        super(config);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public static ClassInfo _getClassInfo()
    {
        if (s_classInfo == null)
        {
            s_classInfo = newClassInfo(DBContextContainer.class);
            s_classInfo.setUIDElements(new String[] { ATTR_CONTEXT_CONTAINER_ID });

            {
                AttributeInfo ai = new AttributeInfo(ATTR_CONTEXT_CONTAINER_ID);
                ai.setJavaName("ID");
                ai.setAttributeClass(String.class);

                StringValidator v = new StringValidator(ATTR_CONTEXT_CONTAINER_ID);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                AttributeInfo ai = new AttributeInfo(ATTR_EMAILBOX);
                ai.setJavaName("EmailBoxID");
                ai.setAttributeClass(String.class);

                StringValidator v = new StringValidator(ATTR_EMAILBOX);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                AttributeInfo ai = new AttributeInfo(ATTR_PROCESSING_STATUS);
                ai.setJavaName("ProcessingStatus");
                ai.setAttributeClass(String.class);

                StringValidator v = new StringValidator(ATTR_PROCESSING_STATUS);
                v.setMaxLength(30);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                AttributeInfo ai = new AttributeInfo(ATTR_STATUS_INFORMATION);
                ai.setJavaName("StatusInformation");
                ai.setAttributeClass(String.class);

                StringValidator v = new StringValidator(ATTR_STATUS_INFORMATION);
                v.setMaxLength(1073741823);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                AttributeInfo ai = new AttributeInfo(ATTR_TRIGGER_DEFINITION);
                ai.setJavaName("TriggerDefinition");
                ai.setAttributeClass(String.class);

                StringValidator v = new StringValidator(ATTR_TRIGGER_DEFINITION);
                v.setMaxLength(1073741823);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                AttributeInfo ai = new AttributeInfo(ATTR_CREATE_DATE);
                ai.setJavaName("CreateDate");
                ai.setAttributeClass(java.util.Date.class);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                AttributeInfo ai = new AttributeInfo(ATTR_STATUS_CHANGE_DATE);
                ai.setJavaName("LastStatusChangeDate");
                ai.setAttributeClass(java.util.Date.class);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                AttributeInfo ai = new AttributeInfo(ATTR_COMPLETE_DATE);
                ai.setJavaName("CompletionDate");
                ai.setAttributeClass(java.util.Date.class);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                // relation EMAILObjects
                // (FK:CONTEXT_CONTAINER[CONTEXT_CONTAINER_ID]:EMAIL[CONTEXT_CONTAINER])
                RelationInfo_FK ri = new RelationInfo_FK(REL_EMAILObjects);
                ri.setName("EMAILObjects");
                ri.setLocalAttributes(new String[] { "CONTEXT_CONTAINER_ID" });
                ri.setLocalIsPK(true);
                ri.setRelatedClass(com.cordys.coe.ac.emailio.storage.db.DBEmail.class);
                ri.setRelatedAttributes(new String[] { "CONTEXT_CONTAINER" });
                ri.setRelatedIdentifier("FK:EMAIL[CONTEXT_CONTAINER]:CONTEXT_CONTAINER[CONTEXT_CONTAINER_ID]");
                ri.setLoadMethod("loadEMAILObjects");
                s_classInfo.addRelationInfo(ri);
            }

            {
                // relation EMAILBOXObject (FK:CONTEXT_CONTAINER[EMAILBOX]:EMAIL_BOX[EMAILBOX_ID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_EMAILBOXObject);
                ri.setName("EMAILBOXObject");
                ri.setLocalAttributes(new String[] { "EMAILBOX" });
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.cordys.coe.ac.emailio.storage.db.DBEmailBox.class);
                ri.setRelatedAttributes(new String[] { "EMAILBOX_ID" });
                ri.setRelatedIdentifier("FK:EMAIL_BOX[EMAILBOX_ID]:CONTEXT_CONTAINER[EMAILBOX]");
                ri.setLoadMethod("loadEMAILBOXObject");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    /**
     * DOCUMENTME.
     *
     * @param   CONTEXT_CONTAINER_ID  DOCUMENTME
     *
     * @return  DOCUMENTME
     */
    public static com.cordys.coe.ac.emailio.storage.db.DBContextContainer getContextContainerObject(String CONTEXT_CONTAINER_ID)
    {
        String queryText = "select * from \"CONTEXT_CONTAINER\" where \"CONTEXT_CONTAINER_ID\" = :CONTEXT_CONTAINER_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CONTEXT_CONTAINER_ID", "CONTEXT_CONTAINER.CONTEXT_CONTAINER_ID",
                           QueryObject.PARAM_STRING, CONTEXT_CONTAINER_ID);
        query.setResultClass(DBContextContainer.class);
        return (DBContextContainer) query.getObject();
    }

    /**
     * DOCUMENTME.
     *
     * @param   fromCONTEXT_CONTAINER_ID  DOCUMENTME
     * @param   toCONTEXT_CONTAINER_ID    DOCUMENTME
     *
     * @return  DOCUMENTME
     */
    public static BusObjectIterator getContextContainerObjects(String fromCONTEXT_CONTAINER_ID,
                                                               String toCONTEXT_CONTAINER_ID)
    {
        String queryText = "select * from \"CONTEXT_CONTAINER\" where \"CONTEXT_CONTAINER_ID\" between :fromCONTEXT_CONTAINER_ID and :toCONTEXT_CONTAINER_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromCONTEXT_CONTAINER_ID", "CONTEXT_CONTAINER.CONTEXT_CONTAINER_ID",
                           QueryObject.PARAM_STRING, fromCONTEXT_CONTAINER_ID);
        query.addParameter("toCONTEXT_CONTAINER_ID", "CONTEXT_CONTAINER.CONTEXT_CONTAINER_ID",
                           QueryObject.PARAM_STRING, toCONTEXT_CONTAINER_ID);
        query.setResultClass(DBContextContainer.class);
        return query.getObjects();
    }

    /**
     * DOCUMENTME.
     *
     * @param   fromCONTEXT_CONTAINER_ID  DOCUMENTME
     * @param   toCONTEXT_CONTAINER_ID    DOCUMENTME
     * @param   cursor                    DOCUMENTME
     *
     * @return  DOCUMENTME
     */
    public static BusObjectIterator getContextContainerObjects(String fromCONTEXT_CONTAINER_ID,
                                                               String toCONTEXT_CONTAINER_ID,
                                                               com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"CONTEXT_CONTAINER\" where \"CONTEXT_CONTAINER_ID\" between :fromCONTEXT_CONTAINER_ID and :toCONTEXT_CONTAINER_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("fromCONTEXT_CONTAINER_ID", "CONTEXT_CONTAINER.CONTEXT_CONTAINER_ID",
                           QueryObject.PARAM_STRING, fromCONTEXT_CONTAINER_ID);
        query.addParameter("toCONTEXT_CONTAINER_ID", "CONTEXT_CONTAINER.CONTEXT_CONTAINER_ID",
                           QueryObject.PARAM_STRING, toCONTEXT_CONTAINER_ID);
        query.setResultClass(DBContextContainer.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    /**
     * DOCUMENTME.
     *
     * @param   EMAILBOX  DOCUMENTME
     *
     * @return  DOCUMENTME
     */
    public static BusObjectIterator getContextContainerObjectsForEmailbox(String EMAILBOX)
    {
        String queryText = "select * from \"CONTEXT_CONTAINER\" where \"EMAILBOX\" = :EMAILBOX";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EMAILBOX", "CONTEXT_CONTAINER.EMAILBOX", QueryObject.PARAM_STRING,
                           EMAILBOX);
        query.setResultClass(DBContextContainer.class);
        return query.getObjects();
    }

    /**
     * DOCUMENTME.
     *
     * @param   CONTEXT_CONTAINER_ID  DOCUMENTME
     * @param   cursor                DOCUMENTME
     *
     * @return  DOCUMENTME
     */
    public static BusObjectIterator getNextContextContainerObjects(String CONTEXT_CONTAINER_ID,
                                                                   com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"CONTEXT_CONTAINER\" where (\"CONTEXT_CONTAINER_ID\" > :CONTEXT_CONTAINER_ID) order by \"CONTEXT_CONTAINER_ID\" asc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CONTEXT_CONTAINER_ID", "CONTEXT_CONTAINER.CONTEXT_CONTAINER_ID",
                           QueryObject.PARAM_STRING, CONTEXT_CONTAINER_ID);
        query.setResultClass(DBContextContainer.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    /**
     * DOCUMENTME.
     *
     * @param   CONTEXT_CONTAINER_ID  DOCUMENTME
     * @param   cursor                DOCUMENTME
     *
     * @return  DOCUMENTME
     */
    public static BusObjectIterator getPreviousContextContainerObjects(String CONTEXT_CONTAINER_ID,
                                                                       com.cordys.cpc.bsf.query.Cursor cursor)
    {
        String queryText = "select * from \"CONTEXT_CONTAINER\" where (\"CONTEXT_CONTAINER_ID\" < :CONTEXT_CONTAINER_ID) order by \"CONTEXT_CONTAINER_ID\" desc";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CONTEXT_CONTAINER_ID", "CONTEXT_CONTAINER.CONTEXT_CONTAINER_ID",
                           QueryObject.PARAM_STRING, CONTEXT_CONTAINER_ID);
        query.setResultClass(DBContextContainer.class);
        query.setCursor(cursor);
        return query.getObjects();
    }

    /**
     * DOCUMENTME.
     *
     * @param  a_EMAIL  DOCUMENTME
     */
    public void addEMAILObject(DBEmail a_EMAIL)
    {
        a_EMAIL.setContextContainerID(this.getID());
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public java.util.Date getCompletionDate()
    {
        return getDateTimestampProperty(ATTR_COMPLETE_DATE);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public java.util.Date getCreateDate()
    {
        return getDateTimestampProperty(ATTR_CREATE_DATE);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public String getEmailBoxID()
    {
        return getStringProperty(ATTR_EMAILBOX);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public DBEmailBox getEMAILBOXObject()
    {
        return (DBEmailBox) getSingleRelationObject(REL_EMAILBOXObject);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public BusObjectIterator getEMAILObjects()
    {
        return getMultiRelationObjects(REL_EMAILObjects);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public String getID()
    {
        return getStringProperty(ATTR_CONTEXT_CONTAINER_ID);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public java.util.Date getLastStatusChangeDate()
    {
        return getDateTimestampProperty(ATTR_STATUS_CHANGE_DATE);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public String getProcessingStatus()
    {
        return getStringProperty(ATTR_PROCESSING_STATUS);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public String getStatusInformation()
    {
        return getStringProperty(ATTR_STATUS_INFORMATION);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public String getTriggerDefinition()
    {
        return getStringProperty(ATTR_TRIGGER_DEFINITION);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public DBEmailBox loadEMAILBOXObject()
    {
        String queryText = "select * from \"EMAIL_BOX\" where \"EMAILBOX_ID\" = :EMAILBOX";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EMAILBOX", "EMAIL_BOX.EMAILBOX_ID", QueryObject.PARAM_STRING,
                           getEmailBoxID());
        query.setResultClass(DBEmailBox.class);
        return (DBEmailBox) query.getObject();
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public BusObjectIterator loadEMAILObjects()
    {
        String queryText = "select * from \"EMAIL\" where \"CONTEXT_CONTAINER\" = :CONTEXT_CONTAINER_ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("CONTEXT_CONTAINER_ID", "EMAIL.CONTEXT_CONTAINER",
                           QueryObject.PARAM_STRING, getID());
        query.setResultClass(DBEmail.class);
        return query.getObjects();
    }

    /**
     * DOCUMENTME.
     *
     * @param  a_EMAIL  DOCUMENTME
     */
    public void removeEMAILObject(DBEmail a_EMAIL)
    {
        a_EMAIL.setNull("CONTEXT_CONTAINER");
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setCompletionDate(java.util.Date value)
    {
        setProperty(ATTR_COMPLETE_DATE, value, 0);
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setCreateDate(java.util.Date value)
    {
        setProperty(ATTR_CREATE_DATE, value, 0);
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setEmailBoxID(String value)
    {
        String[] relations = new String[] { REL_EMAILBOXObject };
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_EMAILBOX, value, 0);
        this.updateSingleRelations(relations, true);
    }

    /**
     * DOCUMENTME.
     *
     * @param  a_EMAIL_BOX  DOCUMENTME
     */
    public void setEMAILBOXObject(DBEmailBox a_EMAIL_BOX)
    {
        if (a_EMAIL_BOX == null)
        {
            this.setNull("EMAILBOX");
        }
        else
        {
            this.setEmailBoxID(a_EMAIL_BOX.getID());
        }
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setID(String value)
    {
        setProperty(ATTR_CONTEXT_CONTAINER_ID, value, 0);
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setLastStatusChangeDate(java.util.Date value)
    {
        setProperty(ATTR_STATUS_CHANGE_DATE, value, 0);
    }

    /**
     * @see  com.cordys.cpc.bsf.busobject.BusObject#setNull(java.lang.String)
     */
    @Override public void setNull(String element)
    {
        super.setNull(element);

        if (ATTR_EMAILBOX.equals(element))
        {
            this.updateSingleRelation(REL_EMAILBOXObject, false);
        }
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setProcessingStatus(String value)
    {
        setProperty(ATTR_PROCESSING_STATUS, value, 0);
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setStatusInformation(String value)
    {
        setProperty(ATTR_STATUS_INFORMATION, value, 0);
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setTriggerDefinition(String value)
    {
        setProperty(ATTR_TRIGGER_DEFINITION, value, 0);
    }
}
