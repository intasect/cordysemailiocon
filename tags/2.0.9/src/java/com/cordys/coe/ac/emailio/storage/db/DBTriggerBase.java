/*
 * This class has been generated by the Code Generator
 */

package com.cordys.coe.ac.emailio.storage.db;

import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;
import com.cordys.cpc.bsf.busobject.QueryObject;
import com.cordys.cpc.bsf.classinfo.AttributeInfo;
import com.cordys.cpc.bsf.classinfo.ClassInfo;
import com.cordys.cpc.bsf.classinfo.RelationInfo_FK;
import com.cordys.cpc.bsf.listeners.constraint.StringValidator;

/**
 * DOCUMENTME.
 *
 * @author  $author$
 */
public abstract class DBTriggerBase extends com.cordys.cpc.bsf.busobject.StateBusObject
{
    /**
     * tags used in the XML document.
     */
    public static final String ATTR_TRIGGER_ID = "TRIGGER_ID";
    /**
     * DOCUMENTME.
     */
    public static final String ATTR_EMAILBOX = "EMAILBOX";
    /**
     * DOCUMENTME.
     */
    public static final String ATTR_TRIGGER_NAME = "TRIGGER_NAME";
    /**
     * DOCUMENTME.
     */
    public static final String ATTR_CONTENT = "CONTENT";
    /**
     * DOCUMENTME.
     */
    private static final String REL_EMAILBOXObject = "FK:TRIGGER_STORE[EMAILBOX]:EMAIL_BOX[EMAILBOX_ID]";
    /**
     * DOCUMENTME.
     */
    private static ClassInfo s_classInfo = null;

    /**
     * Creates a new DBTriggerBase object.
     *
     * @param  config  DOCUMENTME
     */
    public DBTriggerBase(BusObjectConfig config)
    {
        super(config);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public static ClassInfo _getClassInfo()
    {
        if (s_classInfo == null)
        {
            s_classInfo = newClassInfo(DBTrigger.class);
            s_classInfo.setUIDElements(new String[] { ATTR_TRIGGER_ID });

            {
                AttributeInfo ai = new AttributeInfo(ATTR_TRIGGER_ID);
                ai.setJavaName("ID");
                ai.setAttributeClass(String.class);

                StringValidator v = new StringValidator(ATTR_TRIGGER_ID);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                AttributeInfo ai = new AttributeInfo(ATTR_EMAILBOX);
                ai.setJavaName("EmailBoxID");
                ai.setAttributeClass(String.class);

                StringValidator v = new StringValidator(ATTR_EMAILBOX);
                v.setMaxLength(50);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                AttributeInfo ai = new AttributeInfo(ATTR_TRIGGER_NAME);
                ai.setJavaName("Name");
                ai.setAttributeClass(String.class);

                StringValidator v = new StringValidator(ATTR_TRIGGER_NAME);
                v.setMaxLength(150);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                AttributeInfo ai = new AttributeInfo(ATTR_CONTENT);
                ai.setJavaName("Content");
                ai.setAttributeClass(String.class);

                StringValidator v = new StringValidator(ATTR_CONTENT);
                v.setMaxLength(1073741823);
                ai.addConstraintHandler(v);
                s_classInfo.addAttributeInfo(ai);
            }

            {
                // relation EMAILBOXObject (FK:TRIGGER_STORE[EMAILBOX]:EMAIL_BOX[EMAILBOX_ID])
                RelationInfo_FK ri = new RelationInfo_FK(REL_EMAILBOXObject);
                ri.setName("EMAILBOXObject");
                ri.setLocalAttributes(new String[] { "EMAILBOX" });
                ri.setLocalIsPK(false);
                ri.setRelatedClass(com.cordys.coe.ac.emailio.storage.db.DBEmailBox.class);
                ri.setRelatedAttributes(new String[] { "EMAILBOX_ID" });
                ri.setRelatedIdentifier("FK:EMAIL_BOX[EMAILBOX_ID]:TRIGGER_STORE[EMAILBOX]");
                ri.setLoadMethod("loadEMAILBOXObject");
                s_classInfo.addRelationInfo(ri);
            }
        }
        return s_classInfo;
    }

    /**
     * DOCUMENTME.
     *
     * @param   TRIGGER_NAME  DOCUMENTME
     *
     * @return  DOCUMENTME
     */
    public static com.cordys.coe.ac.emailio.storage.db.DBTrigger getTriggerByName(String TRIGGER_NAME)
    {
        String queryText = "select * from \"TRIGGER_STORE\" where \"TRIGGER_NAME\" = :TRIGGER_NAME";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("TRIGGER_NAME", "TRIGGER_STORE.TRIGGER_NAME", QueryObject.PARAM_STRING,
                           TRIGGER_NAME);
        query.setResultClass(DBTrigger.class);
        return (DBTrigger) query.getObject();
    }

    /**
     * DOCUMENTME.
     *
     * @param   ID  DOCUMENTME
     *
     * @return  DOCUMENTME
     */
    public static com.cordys.coe.ac.emailio.storage.db.DBTrigger getTriggerDefinition(String ID)
    {
        String queryText = "select * from \"TRIGGER_STORE\" where \"TRIGGER_ID\" = :ID";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("ID", "TRIGGER_STORE.TRIGGER_ID", QueryObject.PARAM_STRING, ID);
        query.setResultClass(DBTrigger.class);
        return (DBTrigger) query.getObject();
    }

    /**
     * DOCUMENTME.
     *
     * @param   EMAILBOX  DOCUMENTME
     *
     * @return  DOCUMENTME
     */
    public static BusObjectIterator getTriggersForEmailbox(String EMAILBOX)
    {
        String queryText = "select * from \"TRIGGER_STORE\" where \"EMAILBOX\" = :EMAILBOX";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EMAILBOX", "TRIGGER_STORE.EMAILBOX", QueryObject.PARAM_STRING,
                           EMAILBOX);
        query.setResultClass(DBTrigger.class);
        return query.getObjects();
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public String getContent()
    {
        return getStringProperty(ATTR_CONTENT);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public String getEmailBoxID()
    {
        return getStringProperty(ATTR_EMAILBOX);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public DBEmailBox getEMAILBOXObject()
    {
        return (DBEmailBox) getSingleRelationObject(REL_EMAILBOXObject);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public String getID()
    {
        return getStringProperty(ATTR_TRIGGER_ID);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public String getName()
    {
        return getStringProperty(ATTR_TRIGGER_NAME);
    }

    /**
     * DOCUMENTME.
     *
     * @return  DOCUMENTME
     */
    public DBEmailBox loadEMAILBOXObject()
    {
        String queryText = "select * from \"EMAIL_BOX\" where \"EMAILBOX_ID\" = :EMAILBOX";
        QueryObject query = new QueryObject(queryText);
        query.addParameter("EMAILBOX", "EMAIL_BOX.EMAILBOX_ID", QueryObject.PARAM_STRING,
                           getEmailBoxID());
        query.setResultClass(DBEmailBox.class);
        return (DBEmailBox) query.getObject();
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setContent(String value)
    {
        setProperty(ATTR_CONTENT, value, 0);
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setEmailBoxID(String value)
    {
        String[] relations = new String[] { REL_EMAILBOXObject };
        this.updateSingleRelations(relations, false);
        setProperty(ATTR_EMAILBOX, value, 0);
        this.updateSingleRelations(relations, true);
    }

    /**
     * DOCUMENTME.
     *
     * @param  a_EMAIL_BOX  DOCUMENTME
     */
    public void setEMAILBOXObject(DBEmailBox a_EMAIL_BOX)
    {
        if (a_EMAIL_BOX == null)
        {
            this.setNull("EMAILBOX");
        }
        else
        {
            this.setEmailBoxID(a_EMAIL_BOX.getID());
        }
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setID(String value)
    {
        setProperty(ATTR_TRIGGER_ID, value, 0);
    }

    /**
     * DOCUMENTME.
     *
     * @param  value  DOCUMENTME
     */
    public void setName(String value)
    {
        setProperty(ATTR_TRIGGER_NAME, value, 0);
    }

    /**
     * @see  com.cordys.cpc.bsf.busobject.BusObject#setNull(java.lang.String)
     */
    @Override public void setNull(String element)
    {
        super.setNull(element);

        if (ATTR_EMAILBOX.equals(element))
        {
            this.updateSingleRelation(REL_EMAILBOXObject, false);
        }
    }
}
