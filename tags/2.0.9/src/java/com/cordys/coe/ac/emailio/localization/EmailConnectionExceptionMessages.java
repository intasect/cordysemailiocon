/**
 * Copyright 2005 Cordys R&D B.V. 
 * 
 * This file is part of the Cordys SAP Connector. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 /**
 * Copyright 2005 Cordys R&D B.V. 
 * 
 * This file is part of the Cordys SAP Connector. 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 package com.cordys.coe.ac.emailio.localization;

import com.eibus.localization.message.Message;
import com.eibus.localization.message.MessageSet;

/**
 * This code is generated by running com.cordys.coe.cep.wizards.localization.CoEMessageGenerator.
 */
public class EmailConnectionExceptionMessages
{
    /**
     * Holds the definition of the message set.
     */
    public static final MessageSet MESSAGE_SET = MessageSet.getMessageSet("com.cordys.coe.ac.emailio.exception.EmailConnectionException");

    /**
     * Holds the definition of the message with ID
     * ECE_INVALID_CONFIGURATION_EMAIL_BOX_MUST_BE_OF_TYPE_IMAP. Message text: Invalid
     * configuration. Email box must be of type IMAP.
     */
    public static final Message ECE_INVALID_CONFIGURATION_EMAIL_BOX_MUST_BE_OF_TYPE_IMAP = MESSAGE_SET
                                                                                           .getMessage("ECE_INVALID_CONFIGURATION_EMAIL_BOX_MUST_BE_OF_TYPE_IMAP");
    /**
     * Holds the definition of the message with ID
     * ECE_INVALID_CONFIGURATION_EMAIL_BOX_MUST_BE_OF_TYPE_POP3. Message text: Invalid
     * configuration. Email box must be of type POP3.
     */
    public static final Message ECE_INVALID_CONFIGURATION_EMAIL_BOX_MUST_BE_OF_TYPE_POP3 = MESSAGE_SET
                                                                                           .getMessage("ECE_INVALID_CONFIGURATION_EMAIL_BOX_MUST_BE_OF_TYPE_POP3");
    /**
     * Holds the definition of the message with ID ECE_NO_EMAIL_BOX_DEFINITION_FOUND. Message text:
     * No email box definition found.
     */
    public static final Message ECE_NO_EMAIL_BOX_DEFINITION_FOUND = MESSAGE_SET.getMessage("ECE_NO_EMAIL_BOX_DEFINITION_FOUND");
    /**
     * Holds the definition of the message with ID ECE_NO_STORE_TYPE_FOUND. Message text: No store
     * type found.
     */
    public static final Message ECE_NO_STORE_TYPE_FOUND = MESSAGE_SET.getMessage("ECE_NO_STORE_TYPE_FOUND");
    /**
     * Holds the definition of the message with ID ECE_ERROR_CLOSING_THE_FOLDER. Message text: Error
     * closing the folder {0}
     */
    public static final Message ECE_ERROR_CLOSING_THE_FOLDER = MESSAGE_SET.getMessage("ECE_ERROR_CLOSING_THE_FOLDER");
    /**
     * Holds the definition of the message with ID ECE_NO_FOLDERS_HAVE_BEEN_REGISTERED. Message
     * text: No folders have been registered
     */
    public static final Message ECE_NO_FOLDERS_HAVE_BEEN_REGISTERED = MESSAGE_SET.getMessage("ECE_NO_FOLDERS_HAVE_BEEN_REGISTERED");
    /**
     * Holds the definition of the message with ID ECE_THERE_IS_NO_FOLDER_REGISTERED_WITH_NAME.
     * Message text: There is no folder registered with name {0}
     */
    public static final Message ECE_THERE_IS_NO_FOLDER_REGISTERED_WITH_NAME = MESSAGE_SET
                                                                              .getMessage("ECE_THERE_IS_NO_FOLDER_REGISTERED_WITH_NAME");
    /**
     * Holds the definition of the message with ID
     * ECE_THE_FOLDER_REGISTERED_WITH_NAME_HAS_NOT_BEEN_OPENED. Message text: The folder registered
     * with name {0} has not been opened.
     */
    public static final Message ECE_THE_FOLDER_REGISTERED_WITH_NAME_HAS_NOT_BEEN_OPENED = MESSAGE_SET
                                                                                          .getMessage("ECE_THE_FOLDER_REGISTERED_WITH_NAME_HAS_NOT_BEEN_OPENED");
    /**
     * Holds the definition of the message with ID ECE_ERROR_GETTING_THE_MESSAGES_FOR_THE_FOLDER.
     * Message text: Error getting the messages for the folder {0}
     */
    public static final Message ECE_ERROR_GETTING_THE_MESSAGES_FOR_THE_FOLDER = MESSAGE_SET
                                                                                .getMessage("ECE_ERROR_GETTING_THE_MESSAGES_FOR_THE_FOLDER");
    /**
     * Holds the definition of the message with ID ECE_ERROR_DELETING_THE_MESSAGE. Message text:
     * Error deleting the message {0}
     */
    public static final Message ECE_ERROR_DELETING_THE_MESSAGE = MESSAGE_SET.getMessage("ECE_ERROR_DELETING_THE_MESSAGE");
    /**
     * Holds the definition of the message with ID ECE_ERROR_OPENING_FOLDER_WITH_NAME. Message text:
     * Error opening folder with name {0}
     */
    public static final Message ECE_ERROR_OPENING_FOLDER_WITH_NAME = MESSAGE_SET.getMessage("ECE_ERROR_OPENING_FOLDER_WITH_NAME");
    /**
     * Holds the definition of the message with ID ECE_ERROR_CLOSING_THE_STORE. Message text: Error
     * closing the store.
     */
    public static final Message ECE_ERROR_CLOSING_THE_STORE = MESSAGE_SET.getMessage("ECE_ERROR_CLOSING_THE_STORE");
    /**
     * Holds the definition of the message with ID ECE_ERROR_CONNECTING_TO_THE_MAILBOX. Message
     * text: Error connecting to the mailbox.
     */
    public static final Message ECE_ERROR_CONNECTING_TO_THE_MAILBOX = MESSAGE_SET.getMessage("ECE_ERROR_CONNECTING_TO_THE_MAILBOX");
}
