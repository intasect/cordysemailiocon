package com.cordys.coe.ac.emailio.localization;

import com.eibus.localization.message.Message;
import com.eibus.localization.message.MessageSet;

/**
 * This code is generated by running com.cordys.coe.cep.wizards.localization.CoEMessageGenerator.
 */
public class InboundEmailExceptionMessages
{
    /**
     * Holds the definition of the message set.
     */
    public static final MessageSet MESSAGE_SET = MessageSet.getMessageSet("com.cordys.coe.ac.emailio.exception.InboundEmailException");

    /**
     * Holds the definition of the message with ID IEE_CONTEXT_CONTAINERS_CANNOT_BE_RESTARTED.
     * Message text: Context containers can only be restarted if they have status ACTION_ERROR or
     * MESSAGE_ERROR. Container {0} has status {1}
     */
    public static final Message IEE_CONTEXT_CONTAINERS_CANNOT_BE_RESTARTED = MESSAGE_SET.getMessage("IEE_CONTEXT_CONTAINERS_CANNOT_BE_RESTARTED");
    /**
     * Holds the definition of the message with ID IEE_COULD_NOT_FIND_THE_CONTAINER_WITH_ID. Message
     * text: Could not find the container with id {0}
     */
    public static final Message IEE_COULD_NOT_FIND_THE_CONTAINER_WITH_ID = MESSAGE_SET.getMessage("IEE_COULD_NOT_FIND_THE_CONTAINER_WITH_ID");
    /**
     * Holds the definition of the message with ID IEE_COULD_NOT_FIND_THE_EMAILBOX_WITH_ID. Message
     * text: Could not find the emailbox with ID {0}
     */
    public static final Message IEE_COULD_NOT_FIND_THE_EMAILBOX_WITH_ID = MESSAGE_SET.getMessage("IEE_COULD_NOT_FIND_THE_EMAILBOX_WITH_ID");
    /**
     * Holds the definition of the message with ID IEE_COULD_NOT_REMOVE_TRIGGER_DEFINITION. Message
     * text: Could not remove the trigger definition
     */
    public static final Message IEE_COULD_NOT_REMOVE_TRIGGER_DEFINITION = MESSAGE_SET.getMessage("IEE_COULD_NOT_REMOVE_TRIGGER_DEFINITION");
    /**
     * Holds the definition of the message with ID
     * IEE_ERROR_CREATING_TRIGGER_OBJECT_FROM_DEFINITION. Message text: Error creating trigger
     * object from definition: {0}
     */
    public static final Message IEE_ERROR_CREATING_TRIGGER_OBJECT_FROM_DEFINITION = MESSAGE_SET
                                                                                    .getMessage("IEE_ERROR_CREATING_TRIGGER_OBJECT_FROM_DEFINITION");
    /**
     * Holds the definition of the message with ID IEE_ERROR_EXECUTING_WSAPPSERVER_BASED_METHOD.
     * Message text: Error executing WS-AppServer based method
     */
    public static final Message IEE_ERROR_EXECUTING_WSAPPSERVER_BASED_METHOD = MESSAGE_SET
                                                                               .getMessage("IEE_ERROR_EXECUTING_WSAPPSERVER_BASED_METHOD");
    /**
     * Holds the definition of the message with ID IEE_ERROR_RECREATING_EMAILBOX_0. Message text:
     * Error recreating emailbox {0}
     */
    public static final Message IEE_ERROR_RECREATING_EMAILBOX_0 = MESSAGE_SET.getMessage("IEE_ERROR_RECREATING_EMAILBOX_0");
    /**
     * Holds the definition of the message with ID IEE_ERROR_REPROCESSING_THE_CONTAINER_WITH_ID.
     * Message text: Error reprocessing the container with ID: {0}. The context for the error: {1}
     */
    public static final Message IEE_ERROR_REPROCESSING_THE_CONTAINER_WITH_ID = MESSAGE_SET
                                                                               .getMessage("IEE_ERROR_REPROCESSING_THE_CONTAINER_WITH_ID");
    /**
     * Holds the definition of the message with ID IEE_GENERAL_ERROR_REPROCESSING_CONTAINER_WITH_ID.
     * Message text: General error reprocessing container with id {0}
     */
    public static final Message IEE_GENERAL_ERROR_REPROCESSING_CONTAINER_WITH_ID = MESSAGE_SET
                                                                                   .getMessage("IEE_GENERAL_ERROR_REPROCESSING_CONTAINER_WITH_ID");
    /**
     * Holds the definition of the message with ID
     * IEE_INVALID_RETURN_TYPE_CANNOT_BUILD_UP_RESPONSE_FOR_RESULT_TYPE_0. Message text: Invalid
     * return type. Cannot build up response for result type {0}
     */
    public static final Message IEE_INVALID_RETURN_TYPE_CANNOT_BUILD_UP_RESPONSE_FOR_RESULT_TYPE_0 = MESSAGE_SET
                                                                                                     .getMessage("IEE_INVALID_RETURN_TYPE_CANNOT_BUILD_UP_RESPONSE_FOR_RESULT_TYPE_0");
    /**
     * Holds the definition of the message with ID IEE_PARAMETER_NOT_FILLED_CONTEXT_CONTAINER_ID.
     * Message text: Parameter not filled: ContextContainerID
     */
    public static final Message IEE_PARAMETER_NOT_FILLED_CONTEXT_CONTAINER_ID = MESSAGE_SET
                                                                                .getMessage("IEE_PARAMETER_NOT_FILLED_CONTEXT_CONTAINER_ID");
    /**
     * Holds the definition of the message with ID IEE_PARAMETER_TRIGGERNAME_NOT_FILLED. Message
     * text: Parameter 'triggername' not filled.
     */
    public static final Message IEE_PARAMETER_TRIGGERNAME_NOT_FILLED = MESSAGE_SET.getMessage("IEE_PARAMETER_TRIGGERNAME_NOT_FILLED");
    /**
     * Holds the definition of the message with ID IEE_THERE_ARE_NO_EMAILS_IN_CONTEXT_CONTAINER.
     * Message text: There are no emails in context container {0}
     */
    public static final Message IEE_THERE_ARE_NO_EMAILS_IN_CONTEXT_CONTAINER = MESSAGE_SET
                                                                               .getMessage("IEE_THERE_ARE_NO_EMAILS_IN_CONTEXT_CONTAINER");
    /**
     * Holds the definition of the message with ID
     * IEE_THERE_WAS_A_PROBLEM_REPROCESSING_THE_MESSAGE_FOR_AN_UNKNOWN_REASON_THE_MAIL_DID_NOT_MATCH_THE_ORIGINAL_TRIGGER.
     * Message text: There was a problem reprocessing the message. For an unknown reason the mail
     * did not match the original trigger.
     */
    public static final Message IEE_THERE_WAS_A_PROBLEM_REPROCESSING_THE_MESSAGE_FOR_AN_UNKNOWN_REASON_THE_MAIL_DID_NOT_MATCH_THE_ORIGINAL_TRIGGER = MESSAGE_SET
                                                                                                                                                     .getMessage("IEE_THERE_WAS_A_PROBLEM_REPROCESSING_THE_MESSAGE_FOR_AN_UNKNOWN_REASON_THE_MAIL_DID_NOT_MATCH_THE_ORIGINAL_TRIGGER");
    /**
     * Holds the definition of the message with ID
     * IEE_THIS_STORAGE_PROVIDER_DOES_NOT_SUPPORT_QUERIES. Message text: This storage provider does
     * not support queries (and thus does not support restarting).
     */
    public static final Message IEE_THIS_STORAGE_PROVIDER_DOES_NOT_SUPPORT_QUERIES = MESSAGE_SET
                                                                                     .getMessage("IEE_THIS_STORAGE_PROVIDER_DOES_NOT_SUPPORT_QUERIES");
    /**
     * Holds the definition of the message with ID IEE_UNSUPPORTED_ACTION. Message text: Unsupported
     * action: {0}
     */
    public static final Message IEE_UNSUPPORTED_ACTION = MESSAGE_SET.getMessage("IEE_UNSUPPORTED_ACTION");
    /**
     * Holds the definition of the message with ID IEE_EXECUTING_REQUEST. Message text: Error
     * executing request: {0}
     */
    public static final Message IEE_EXECUTING_REQUEST = MESSAGE_SET.getMessage("IEE_EXECUTING_REQUEST");
    /**
     * Holds the definition of the message with ID IEE_MISSING_PARAMETER_EMAILBOX. Message text:
     * Missing parameter: emailbox
     */
    public static final Message IEE_MISSING_PARAMETER_EMAILBOX = MESSAGE_SET.getMessage("IEE_MISSING_PARAMETER_EMAILBOX");
    /**
     * Holds the definition of the message with ID IEE_PARAMETER_NOT_FILLED_EMAILBOX. Message text:
     * Parameter not filled: emailbox
     */
    public static final Message IEE_PARAMETER_NOT_FILLED_EMAILBOX = MESSAGE_SET.getMessage("IEE_PARAMETER_NOT_FILLED_EMAILBOX");
    /**
     * Holds the definition of the message with ID IEE_PARAMETER_NOT_FILLED_TRIGGERNAME. Message
     * text: Parameter not filled: triggername
     */
    public static final Message IEE_PARAMETER_NOT_FILLED_TRIGGERNAME = MESSAGE_SET.getMessage("IEE_PARAMETER_NOT_FILLED_TRIGGERNAME");
    /**
     * Holds the definition of the message with ID IEE_MISSING_PARAMETER_TRIGGER. Message text:
     * Missing parameter: trigger
     */
    public static final Message IEE_MISSING_PARAMETER_TRIGGER = MESSAGE_SET.getMessage("IEE_MISSING_PARAMETER_TRIGGER");
    /**
     * Holds the definition of the message with ID IEE_THERE_IS_NO_EMAIL_BOX_WITH_NAME. Message
     * text: There is no email box with name {0}
     */
    public static final Message IEE_THERE_IS_NO_EMAIL_BOX_WITH_NAME = MESSAGE_SET.getMessage("IEE_THERE_IS_NO_EMAIL_BOX_WITH_NAME");
    /**
     * Holds the definition of the message with ID IEE_COULD_NOT_CREATE_TRIGGER_DEFINITION. Message
     * text: Could not create trigger definition
     */
    public static final Message IEE_COULD_NOT_CREATE_TRIGGER_DEFINITION = MESSAGE_SET.getMessage("IEE_COULD_NOT_CREATE_TRIGGER_DEFINITION");
    /**
     * Holds the definition of the message with ID IEE_THE_EMAIL_BOX_IS_NULL. Message text: The
     * email box is null.
     */
    public static final Message IEE_THE_EMAIL_BOX_IS_NULL = MESSAGE_SET.getMessage("IEE_THE_EMAIL_BOX_IS_NULL");
    /**
     * Holds the definition of the message with ID IEE_THE_DISPATCHER_MUST_BE_FILLED. Message text:
     * The dispatcher must be filled.
     */
    public static final Message IEE_THE_DISPATCHER_MUST_BE_FILLED = MESSAGE_SET.getMessage("IEE_THE_DISPATCHER_MUST_BE_FILLED");
    /**
     * Holds the definition of the message with ID IEE_THE_CONNECTOR_MUST_BE_FILLED. Message text:
     * The connector must be filled.
     */
    public static final Message IEE_THE_CONNECTOR_MUST_BE_FILLED = MESSAGE_SET.getMessage("IEE_THE_CONNECTOR_MUST_BE_FILLED");
    /**
     * Holds the definition of the message with ID IEE_ERROR_CREATING_EMAIL_CONNECTION. Message
     * text: Error creating email connection for emailbox {0}
     */
    public static final Message IEE_ERROR_CREATING_EMAIL_CONNECTION = MESSAGE_SET.getMessage("IEE_ERROR_CREATING_EMAIL_CONNECTION");
    /**
     * Holds the definition of the message with ID
     * IEE_THERE_IS_ALREADY_AN_EMAILBOX_WITH_NAME_0_CONFIGURED. Message text: There is already an
     * emailbox with name {0} configured.
     */
    public static final Message IEE_THERE_IS_ALREADY_AN_EMAILBOX_WITH_NAME_0_CONFIGURED = MESSAGE_SET
                                                                                          .getMessage("IEE_THERE_IS_ALREADY_AN_EMAILBOX_WITH_NAME_0_CONFIGURED");
}
