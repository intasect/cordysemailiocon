package com.cordys.coe.ac.emailio.localization;

import com.eibus.localization.message.Message;
import com.eibus.localization.message.MessageSet;

/**
 * This code is generated by running com.cordys.coe.cep.wizards.localization.CoEMessageGenerator.
 */
public class EmailIOConfigurationExceptionMessages
{
    /**
     * Holds the definition of the message set.
     */
    public static final MessageSet MESSAGE_SET = MessageSet.getMessageSet("com.cordys.coe.ac.emailio.exception.EmailIOConfigurationException");

    /**
     * Holds the definition of the message with ID
     * EICE_CANNOT_CREATE_A_ONETIMEONLY_TRIGGER_WHICH_COMBINES_EMAILS. Message text: Cannot create a
     * one-time-only trigger which combines emails.
     */
    public static final Message EICE_CANNOT_CREATE_A_ONETIMEONLY_TRIGGER_WHICH_COMBINES_EMAILS = MESSAGE_SET
                                                                                                 .getMessage("EICE_CANNOT_CREATE_A_ONETIMEONLY_TRIGGER_WHICH_COMBINES_EMAILS");
    /**
     * Holds the definition of the message with ID EICE_COULD_NOT_CREATE_THE_STORAGE_PROVIDER.
     * Message text: Could not create the storage provider
     */
    public static final Message EICE_COULD_NOT_CREATE_THE_STORAGE_PROVIDER = MESSAGE_SET.getMessage("EICE_COULD_NOT_CREATE_THE_STORAGE_PROVIDER");
    /**
     * Holds the definition of the message with ID
     * EICE_COULD_NOT_FIND_A_SOAP_NODE_IMPLEMENTING_01_IN_ORGANIZATION_2. Message text: Could not
     * find a SOAP node implementing {0}:{1} in organization {2}
     */
    public static final Message EICE_COULD_NOT_FIND_A_SOAP_NODE_IMPLEMENTING_01_IN_ORGANIZATION_2 = MESSAGE_SET
                                                                                                    .getMessage("EICE_COULD_NOT_FIND_A_SOAP_NODE_IMPLEMENTING_01_IN_ORGANIZATION_2");
    /**
     * Holds the definition of the message with ID
     * EICE_COULD_NOT_FIND_THE_ACTION_WITH_ID_0_THE_INVALID_REFERENCE_IS_IN_TRIGGER_1. Message text:
     * Could not find the action with ID {0}. The invalid reference is in trigger {1}
     */
    public static final Message EICE_COULD_NOT_FIND_THE_ACTION_WITH_ID_0_THE_INVALID_REFERENCE_IS_IN_TRIGGER_1 = MESSAGE_SET
                                                                                                                 .getMessage("EICE_COULD_NOT_FIND_THE_ACTION_WITH_ID_0_THE_INVALID_REFERENCE_IS_IN_TRIGGER_1");
    /**
     * Holds the definition of the message with ID EICE_DUPLICATE_EMAIL_BOX_NAME. Message text:
     * Duplicate email box name: {0}
     */
    public static final Message EICE_DUPLICATE_EMAIL_BOX_NAME = MESSAGE_SET.getMessage("EICE_DUPLICATE_EMAIL_BOX_NAME");
    /**
     * Holds the definition of the message with ID EICE_DUPLICATE_SMTP_SERVER_NAME. Message text:
     * Duplicate SMTP server name: {0}
     */
    public static final Message EICE_DUPLICATE_SMTP_SERVER_NAME = MESSAGE_SET.getMessage("EICE_DUPLICATE_SMTP_SERVER_NAME");
    /**
     * Holds the definition of the message with ID EICE_ERROR_CREATING_APPROPIATE_TRIGGER_STORE.
     * Message text: Error creating appropiate trigger store
     */
    public static final Message EICE_ERROR_CREATING_APPROPIATE_TRIGGER_STORE = MESSAGE_SET
                                                                               .getMessage("EICE_ERROR_CREATING_APPROPIATE_TRIGGER_STORE");
    /**
     * Holds the definition of the message with ID EICE_ERROR_CREATING_GLOBAL_STORAGE_INSTANCE.
     * Message text: Error creating global storage instance.
     */
    public static final Message EICE_ERROR_CREATING_GLOBAL_STORAGE_INSTANCE = MESSAGE_SET
                                                                              .getMessage("EICE_ERROR_CREATING_GLOBAL_STORAGE_INSTANCE");
    /**
     * Holds the definition of the message with ID EICE_ERROR_CREATING_PROPERTIES. Message text:
     * Error creating properties.
     */
    public static final Message EICE_ERROR_CREATING_PROPERTIES = MESSAGE_SET.getMessage("EICE_ERROR_CREATING_PROPERTIES");
    /**
     * Holds the definition of the message with ID EICE_ERROR_CREATING_STORAGE_PROVIDER. Message
     * text: Error creating storage provider
     */
    public static final Message EICE_ERROR_CREATING_STORAGE_PROVIDER = MESSAGE_SET.getMessage("EICE_ERROR_CREATING_STORAGE_PROVIDER");
    /**
     * Holds the definition of the message with ID EICE_ERROR_INITIALIZING_LDAP_CONNECTION. Message
     * text: Error initializing LDAP connection
     */
    public static final Message EICE_ERROR_INITIALIZING_LDAP_CONNECTION = MESSAGE_SET.getMessage("EICE_ERROR_INITIALIZING_LDAP_CONNECTION");
    /**
     * Holds the definition of the message with ID EICE_ERROR_VALIDATING_CONFIGURATION. Message
     * text: Error validating configuration.
     */
    public static final Message EICE_ERROR_VALIDATING_CONFIGURATION = MESSAGE_SET.getMessage("EICE_ERROR_VALIDATING_CONFIGURATION");
    /**
     * Holds the definition of the message with ID EICE_INVALID_MAILBOX_TYPE. Message text: Invalid
     * mailbox type: {0}
     */
    public static final Message EICE_INVALID_MAILBOX_TYPE = MESSAGE_SET.getMessage("EICE_INVALID_MAILBOX_TYPE");
    /**
     * Holds the definition of the message with ID EICE_MISSING_EMAIL_BOX_NAME. Message text:
     * Missing email box name
     */
    public static final Message EICE_MISSING_EMAIL_BOX_NAME = MESSAGE_SET.getMessage("EICE_MISSING_EMAIL_BOX_NAME");
    /**
     * Holds the definition of the message with ID EICE_MISSING_HOST_NAME. Message text: Missing
     * host name
     */
    public static final Message EICE_MISSING_HOST_NAME = MESSAGE_SET.getMessage("EICE_MISSING_HOST_NAME");
    /**
     * Holds the definition of the message with ID EICE_MISSING_USER_NAME. Message text: Missing
     * user name
     */
    public static final Message EICE_MISSING_USER_NAME = MESSAGE_SET.getMessage("EICE_MISSING_USER_NAME");
    /**
     * Holds the definition of the message with ID EICE_NO_TRIGGERS_CONFIGURED_FOR_THIS_EMAIL_BOX.
     * Message text: No triggers configured for this email box.
     */
    public static final Message EICE_NO_TRIGGERS_CONFIGURED_FOR_THIS_EMAIL_BOX = MESSAGE_SET
                                                                                 .getMessage("EICE_NO_TRIGGERS_CONFIGURED_FOR_THIS_EMAIL_BOX");
    /**
     * Holds the definition of the message with ID EICE_MISSING_EMAIL_BOX_TYPE. Message text:
     * Missing email box type.
     */
    public static final Message EICE_MISSING_EMAIL_BOX_TYPE = MESSAGE_SET.getMessage("EICE_MISSING_EMAIL_BOX_TYPE");
    /**
     * Holds the definition of the message with ID
     * EICE_FOR_IMAP_A_MINIMUM_OF_1_FOLDER_NEEDS_TO_BE_DEFINED. Message text: For IMAP a minimum of
     * 1 folder needs to be defined.
     */
    public static final Message EICE_FOR_IMAP_A_MINIMUM_OF_1_FOLDER_NEEDS_TO_BE_DEFINED = MESSAGE_SET
                                                                                          .getMessage("EICE_FOR_IMAP_A_MINIMUM_OF_1_FOLDER_NEEDS_TO_BE_DEFINED");
    /**
     * Holds the definition of the message with ID EICE_CONFIGURATION_NOT_FOUND. Message text:
     * Configuration not found
     */
    public static final Message EICE_CONFIGURATION_NOT_FOUND = MESSAGE_SET.getMessage("EICE_CONFIGURATION_NOT_FOUND");
    /**
     * Holds the definition of the message with ID EICE_CONFIGURATION_2ND_LEVEL_NOT_FOUND. Message
     * text: Configuration (2nd level) not found
     */
    public static final Message EICE_CONFIGURATION_2ND_LEVEL_NOT_FOUND = MESSAGE_SET.getMessage("EICE_CONFIGURATION_2ND_LEVEL_NOT_FOUND");
    /**
     * Holds the definition of the message with ID EICE_ORGANIZATION_DOES_NOT_EXIST. Message text:
     * Organization does not exist: {0}
     */
    public static final Message EICE_ORGANIZATION_DOES_NOT_EXIST = MESSAGE_SET.getMessage("EICE_ORGANIZATION_DOES_NOT_EXIST");
    /**
     * Holds the definition of the message with ID
     * EICE_ROOTTAG_OF_THE_CONFIGURATION_SHOULD_BE_CONFIGURATION. Message text: Root-tag of the
     * configuration should be <configuration>
     */
    public static final Message EICE_ROOTTAG_OF_THE_CONFIGURATION_SHOULD_BE_CONFIGURATION = MESSAGE_SET
                                                                                            .getMessage("EICE_ROOTTAG_OF_THE_CONFIGURATION_SHOULD_BE_CONFIGURATION");
    /**
     * Holds the definition of the message with ID EICE_NO_EMAIL_BOXES_FOUND_TO_MONITOR. Message
     * text: No email boxes found to monitor
     */
    public static final Message EICE_NO_EMAIL_BOXES_FOUND_TO_MONITOR = MESSAGE_SET.getMessage("EICE_NO_EMAIL_BOXES_FOUND_TO_MONITOR");
    /**
     * Holds the definition of the message with ID EICE_NUMBER_OF_WORKERS_IS_NOT_DEFINED. Message
     * text: Number of workers is not defined.
     */
    public static final Message EICE_NUMBER_OF_WORKERS_IS_NOT_DEFINED = MESSAGE_SET.getMessage("EICE_NUMBER_OF_WORKERS_IS_NOT_DEFINED");
    /**
     * Holds the definition of the message with ID EICE_INVALID_MAX_WORKERS_SPECIFIED. Message text:
     * Invalid max workers specified: {0}
     */
    public static final Message EICE_INVALID_MAX_WORKERS_SPECIFIED = MESSAGE_SET.getMessage("EICE_INVALID_MAX_WORKERS_SPECIFIED");
    /**
     * Holds the definition of the message with ID EICE_ERROR_CREATING_MAPPING_CONFIGURATION.
     * Message text: Error creating mapping configuration
     */
    public static final Message EICE_ERROR_CREATING_MAPPING_CONFIGURATION = MESSAGE_SET.getMessage("EICE_ERROR_CREATING_MAPPING_CONFIGURATION");
    /**
     * Holds the definition of the message with ID EICE_MISSING_MAPPING_SOURCE. Message text:
     * Missing mapping source
     */
    public static final Message EICE_MISSING_MAPPING_SOURCE = MESSAGE_SET.getMessage("EICE_MISSING_MAPPING_SOURCE");
    /**
     * Holds the definition of the message with ID EICE_MISSING_MAPPING_VALUE. Message text: Missing
     * mapping value
     */
    public static final Message EICE_MISSING_MAPPING_VALUE = MESSAGE_SET.getMessage("EICE_MISSING_MAPPING_VALUE");
    /**
     * Holds the definition of the message with ID EICE_MISSING_VALUE_SOURCE. Message text: Missing
     * value source
     */
    public static final Message EICE_MISSING_VALUE_SOURCE = MESSAGE_SET.getMessage("EICE_MISSING_VALUE_SOURCE");
    /**
     * Holds the definition of the message with ID EICE_SOAP_NODE__PROCESSOR_DOES_NOT_EXIST. Message
     * text: SOAP Node / Processor does not exist: {0}
     */
    public static final Message EICE_SOAP_NODE__PROCESSOR_DOES_NOT_EXIST = MESSAGE_SET.getMessage("EICE_SOAP_NODE__PROCESSOR_DOES_NOT_EXIST");
    /**
     * Holds the definition of the message with ID EICE_THE_CONFIGURATION_XML_IS_INVALID. Message
     * text: The configuration XML is invalid:
     *
     * <p>{0}</p>
     *
     * <p>Actual (formatted) XML:</p>
     *
     * <p>{1}</p>
     */
    public static final Message EICE_THE_CONFIGURATION_XML_IS_INVALID = MESSAGE_SET.getMessage("EICE_THE_CONFIGURATION_XML_IS_INVALID");
    /**
     * Holds the definition of the message with ID EICE_THE_METHOD_NAME_MUST_BE_SPECIFIED. Message
     * text: The method name must be specified.
     */
    public static final Message EICE_THE_METHOD_NAME_MUST_BE_SPECIFIED = MESSAGE_SET.getMessage("EICE_THE_METHOD_NAME_MUST_BE_SPECIFIED");
    /**
     * Holds the definition of the message with ID EICE_THE_NAMESPACE_MUST_BE_SPECIFIED. Message
     * text: The namespace must be specified.
     */
    public static final Message EICE_THE_NAMESPACE_MUST_BE_SPECIFIED = MESSAGE_SET.getMessage("EICE_THE_NAMESPACE_MUST_BE_SPECIFIED");
    /**
     * Holds the definition of the message with ID EICE_ERROR_CREATING_PATTERN. Message text: Error
     * creating pattern
     */
    public static final Message EICE_ERROR_CREATING_PATTERN = MESSAGE_SET.getMessage("EICE_ERROR_CREATING_PATTERN");
    /**
     * Holds the definition of the message with ID EICE_ERROR_CREATING_PATTERN_MISSING_VALUE.
     * Message text: Error creating pattern: missing value
     */
    public static final Message EICE_ERROR_CREATING_PATTERN_MISSING_VALUE = MESSAGE_SET.getMessage("EICE_ERROR_CREATING_PATTERN_MISSING_VALUE");
    /**
     * Holds the definition of the message with ID EICE_ERROR_CREATING_PATTERN_MISSING_NAME. Message
     * text: Error creating pattern: missing name
     */
    public static final Message EICE_ERROR_CREATING_PATTERN_MISSING_NAME = MESSAGE_SET.getMessage("EICE_ERROR_CREATING_PATTERN_MISSING_NAME");
    /**
     * Holds the definition of the message with ID EICE_INVALID_PATTERN_TYPE. Message text: Invalid
     * pattern type: {0}
     */
    public static final Message EICE_INVALID_PATTERN_TYPE = MESSAGE_SET.getMessage("EICE_INVALID_PATTERN_TYPE");
    /**
     * Holds the definition of the message with ID EICE_NO_SECTION_DEFINED_FOR_RULE. Message text:
     * No section defined for rule {0}
     */
    public static final Message EICE_NO_SECTION_DEFINED_FOR_RULE = MESSAGE_SET.getMessage("EICE_NO_SECTION_DEFINED_FOR_RULE");
    /**
     * Holds the definition of the message with ID
     * EICE_THE_SOAP_NODE_0_DOES_NOT_HAVE_NAMESPACE_1_ATTACHED. Message text: The SOAP node {0} does
     * not have namespace {1} attached.
     */
    public static final Message EICE_THE_SOAP_NODE_0_DOES_NOT_HAVE_NAMESPACE_1_ATTACHED = MESSAGE_SET
                                                                                          .getMessage("EICE_THE_SOAP_NODE_0_DOES_NOT_HAVE_NAMESPACE_1_ATTACHED");
    /**
     * Holds the definition of the message with ID EICE_THE_TRIGGER_STORE_MAY_NOT_BE_NULL. Message
     * text: The trigger store may not be null
     */
    public static final Message EICE_THE_TRIGGER_STORE_MAY_NOT_BE_NULL = MESSAGE_SET.getMessage("EICE_THE_TRIGGER_STORE_MAY_NOT_BE_NULL");
    /**
     * Holds the definition of the message with ID EICE_UNKNOWN_SECTION_DEFINED_FOR_RULE. Message
     * text: Unknown section defined for rule {0}
     */
    public static final Message EICE_UNKNOWN_SECTION_DEFINED_FOR_RULE = MESSAGE_SET.getMessage("EICE_UNKNOWN_SECTION_DEFINED_FOR_RULE");
    /**
     * Holds the definition of the message with ID EICE_NO_PATTERNS_DEFINED_FOR_RULE. Message text:
     * No patterns defined for rule {0}
     */
    public static final Message EICE_NO_PATTERNS_DEFINED_FOR_RULE = MESSAGE_SET.getMessage("EICE_NO_PATTERNS_DEFINED_FOR_RULE");
    /**
     * Holds the definition of the message with ID
     * EICE_INVALID_SRC_SPECIFIED_FOR_THE_REPLACEMENT_TOKEN. Message text: Invalid src specified for
     * the replacement token.
     */
    public static final Message EICE_INVALID_SRC_SPECIFIED_FOR_THE_REPLACEMENT_TOKEN = MESSAGE_SET
                                                                                       .getMessage("EICE_INVALID_SRC_SPECIFIED_FOR_THE_REPLACEMENT_TOKEN");
    /**
     * Holds the definition of the message with ID EICE_INVALID_SRC_SPECIFIED_FOR_THE_STORE_TOKEN.
     * Message text: Invalid src specified for the store token.
     */
    public static final Message EICE_INVALID_SRC_SPECIFIED_FOR_THE_STORE_TOKEN = MESSAGE_SET
                                                                                 .getMessage("EICE_INVALID_SRC_SPECIFIED_FOR_THE_STORE_TOKEN");
    /**
     * Holds the definition of the message with ID EICE_MISSING_TOKEN_NAME. Message text: Missing
     * token name
     */
    public static final Message EICE_MISSING_TOKEN_NAME = MESSAGE_SET.getMessage("EICE_MISSING_TOKEN_NAME");
    /**
     * Holds the definition of the message with ID EICE_MISSING_TOKEN_VALUE. Message text: Missing
     * token value
     */
    public static final Message EICE_MISSING_TOKEN_VALUE = MESSAGE_SET.getMessage("EICE_MISSING_TOKEN_VALUE");
    /**
     * Holds the definition of the message with ID EICE_MISSING_TRIGGER_NAME. Message text: Missing
     * trigger name
     */
    public static final Message EICE_MISSING_TRIGGER_NAME = MESSAGE_SET.getMessage("EICE_MISSING_TRIGGER_NAME");
    /**
     * Holds the definition of the message with ID EICE_NO_RULES_CONFIGURED_FOR_THIS_TRIGGER.
     * Message text: No rules configured for this trigger.
     */
    public static final Message EICE_NO_RULES_CONFIGURED_FOR_THIS_TRIGGER = MESSAGE_SET.getMessage("EICE_NO_RULES_CONFIGURED_FOR_THIS_TRIGGER");
    /**
     * Holds the definition of the message with ID EICE_NO_MESSAGE_DEFINED_FOR_THIS_TRIGGER. Message
     * text: No message defined for this trigger.
     */
    public static final Message EICE_NO_MESSAGE_DEFINED_FOR_THIS_TRIGGER = MESSAGE_SET.getMessage("EICE_NO_MESSAGE_DEFINED_FOR_THIS_TRIGGER");
    /**
     * Holds the definition of the message with ID
     * EICE_CLASSNAME_COULD_NOT_BE_FOUND_FOR_THE_CUSTOM_RULE. Message text: Classname could not be
     * found for the custom rule: {0}
     */
    public static final Message EICE_CLASSNAME_COULD_NOT_BE_FOUND_FOR_THE_CUSTOM_RULE = MESSAGE_SET
                                                                                        .getMessage("EICE_CLASSNAME_COULD_NOT_BE_FOUND_FOR_THE_CUSTOM_RULE");
    /**
     * Holds the definition of the message with ID EICE_COULD_NOT_FIND_THE_CUSTOM_PATTERN_CLASS_0.
     * Message text: Could not find the custom pattern class {0}
     */
    public static final Message EICE_COULD_NOT_FIND_THE_CUSTOM_PATTERN_CLASS_0 = MESSAGE_SET
                                                                                 .getMessage("EICE_COULD_NOT_FIND_THE_CUSTOM_PATTERN_CLASS_0");
    /**
     * Holds the definition of the message with ID
     * EICE_CLASS_DOES_NOT_IMPLEMENT_THE_IPATTERN_INTERFACE. Message text: Class {0} does not
     * implement the IPattern interface.
     */
    public static final Message EICE_CLASS_DOES_NOT_IMPLEMENT_THE_IPATTERN_INTERFACE = MESSAGE_SET
                                                                                       .getMessage("EICE_CLASS_DOES_NOT_IMPLEMENT_THE_IPATTERN_INTERFACE");
    /**
     * Holds the definition of the message with ID
     * EICE_COULD_NOT_FIND_THE_PROPER_CONSTRUCTOR_INT_FOR_CLASS. Message text: Could not find the
     * proper constructor (int) for class {0}
     */
    public static final Message EICE_COULD_NOT_FIND_THE_PROPER_CONSTRUCTOR_INT_FOR_CLASS = MESSAGE_SET
                                                                                           .getMessage("EICE_COULD_NOT_FIND_THE_PROPER_CONSTRUCTOR_INT_FOR_CLASS");
    /**
     * Holds the definition of the message with ID
     * EICE_ERROR_INSTANTIATING_THE_CUSTOM_PATTERN_CLASS. Message text: Error instantiating the
     * custom pattern class {0}
     */
    public static final Message EICE_ERROR_INSTANTIATING_THE_CUSTOM_PATTERN_CLASS = MESSAGE_SET
                                                                                    .getMessage("EICE_ERROR_INSTANTIATING_THE_CUSTOM_PATTERN_CLASS");
    /**
     * Holds the definition of the message with ID EICE_INVALID_OPERATION_TYPE. Message text:
     * Invalid operation type: {0}
     */
    public static final Message EICE_INVALID_OPERATION_TYPE = MESSAGE_SET.getMessage("EICE_INVALID_OPERATION_TYPE");
    /**
     * Holds the definition of the message with ID
     * EICE_MISSING_THE_CLASS_NAME_DEFINITION_FOR_CUSTOM_OPERATION. Message text: Missing the class
     * name definition.
     */
    public static final Message EICE_MISSING_THE_CLASS_NAME_DEFINITION_FOR_CUSTOM_OPERATION = MESSAGE_SET
                                                                                              .getMessage("EICE_MISSING_THE_CLASS_NAME_DEFINITION_FOR_CUSTOM_OPERATION");
    /**
     * Holds the definition of the message with ID EICE_COULD_NOT_LOAD_CLASS_FOR_CUSTOM_OPERATION.
     * Message text: Could not load class {0}
     */
    public static final Message EICE_COULD_NOT_LOAD_CLASS_FOR_CUSTOM_OPERATION = MESSAGE_SET
                                                                                 .getMessage("EICE_COULD_NOT_LOAD_CLASS_FOR_CUSTOM_OPERATION");
    /**
     * Holds the definition of the message with ID
     * EICE_CLASS_0_DOES_NOT_IMPLEMENT_THE_INTERFACE_ICUSTOMMAPPING. Message text: Class {0} does
     * not implement the interface ICustomMapping
     */
    public static final Message EICE_CLASS_0_DOES_NOT_IMPLEMENT_THE_INTERFACE_ICUSTOMMAPPING = MESSAGE_SET
                                                                                               .getMessage("EICE_CLASS_0_DOES_NOT_IMPLEMENT_THE_INTERFACE_ICUSTOMMAPPING");
    /**
     * Holds the definition of the message with ID
     * EICE_COULD_NOT_INSTANTIATE_CLASS_CUSTOM_OPERATION. Message text: Could not instantiate class
     * {0}
     */
    public static final Message EICE_COULD_NOT_INSTANTIATE_CLASS_CUSTOM_OPERATION = MESSAGE_SET
                                                                                    .getMessage("EICE_COULD_NOT_INSTANTIATE_CLASS_CUSTOM_OPERATION");
    /**
     * Holds the definition of the message with ID EICE_IS_NOT_A_VALID_ACTION_TYPE. Message text:
     * {0} is not a valid action type
     */
    public static final Message EICE_IS_NOT_A_VALID_ACTION_TYPE = MESSAGE_SET.getMessage("EICE_IS_NOT_A_VALID_ACTION_TYPE");
    /**
     * Holds the definition of the message with ID EICE_MISSING_ACTUAL_CONFIGURATION_DETAILS.
     * Message text: Missing actual configuration details
     */
    public static final Message EICE_MISSING_ACTUAL_CONFIGURATION_DETAILS = MESSAGE_SET.getMessage("EICE_MISSING_ACTUAL_CONFIGURATION_DETAILS");
    /**
     * Holds the definition of the message with ID EICE_MISSING_ACTION_CONFIGURATION_NODE. Message
     * text: Missing action configuration node
     */
    public static final Message EICE_MISSING_ACTION_CONFIGURATION_NODE = MESSAGE_SET.getMessage("EICE_MISSING_ACTION_CONFIGURATION_NODE");
    /**
     * Holds the definition of the message with ID EICE_ACTION_ID_MUST_BE_SPECIFIED. Message text:
     * Action ID must be specified
     */
    public static final Message EICE_ACTION_ID_MUST_BE_SPECIFIED = MESSAGE_SET.getMessage("EICE_ACTION_ID_MUST_BE_SPECIFIED");
    /**
     * Holds the definition of the message with ID EICE_CLASSNAME_MUST_BE_FILLED. Message text:
     * Classname must be filled.
     */
    public static final Message EICE_CLASSNAME_MUST_BE_FILLED = MESSAGE_SET.getMessage("EICE_CLASSNAME_MUST_BE_FILLED");
    /**
     * Holds the definition of the message with ID EICE_COULD_NOT_FIND_CUSTOM_ACTION_CLASS_0.
     * Message text: Could not find custom action class {0}
     */
    public static final Message EICE_COULD_NOT_FIND_CUSTOM_ACTION_CLASS_0 = MESSAGE_SET.getMessage("EICE_COULD_NOT_FIND_CUSTOM_ACTION_CLASS_0");
    /**
     * Holds the definition of the message with ID
     * EICE_CLASS_0_DOES_NOT_IMPLEMENT_THE_ICUSTOMACTION_INTERFACE. Message text: Class {0} does not
     * implement the ICustomAction interface
     */
    public static final Message EICE_CLASS_0_DOES_NOT_IMPLEMENT_THE_ICUSTOMACTION_INTERFACE = MESSAGE_SET
                                                                                              .getMessage("EICE_CLASS_0_DOES_NOT_IMPLEMENT_THE_ICUSTOMACTION_INTERFACE");
    /**
     * Holds the definition of the message with ID EICE_ERROR_INSTANTIATING_THE_CUSTOM_ACTION_CLASS.
     * Message text: Error instantiating the custom action class {0}
     */
    public static final Message EICE_ERROR_INSTANTIATING_THE_CUSTOM_ACTION_CLASS = MESSAGE_SET
                                                                                   .getMessage("EICE_ERROR_INSTANTIATING_THE_CUSTOM_ACTION_CLASS");
    /**
     * Holds the definition of the message with ID EICE_MISSING_FROM_ADDRESS_FOR_ACTION_0. Message
     * text: Missing from address for action {0}
     */
    public static final Message EICE_MISSING_FROM_ADDRESS_FOR_ACTION_0 = MESSAGE_SET.getMessage("EICE_MISSING_FROM_ADDRESS_FOR_ACTION_0");
    /**
     * Holds the definition of the message with ID EICE_MISSING_TO_ADDRESS_FOR_ACTION. Message text:
     * Missing to address for action {0}
     */
    public static final Message EICE_MISSING_TO_ADDRESS_FOR_ACTION = MESSAGE_SET.getMessage("EICE_MISSING_TO_ADDRESS_FOR_ACTION");
    /**
     * Holds the definition of the message with ID EICE_ERROR_EXECUTING_ACTION. Message text: Error
     * executing action {0}
     */
    public static final Message EICE_ERROR_EXECUTING_ACTION = MESSAGE_SET.getMessage("EICE_ERROR_EXECUTING_ACTION");
    /**
     * Holds the definition of the message with ID EICE_USER_DN_DOES_NOT_EXIST. Message text: User
     * DN does not exist: {0}
     */
    public static final Message EICE_USER_DN_DOES_NOT_EXIST = MESSAGE_SET.getMessage("EICE_USER_DN_DOES_NOT_EXIST");
    /**
     * Holds the definition of the message with ID THE_TRIGGER_STORE_MAY_NOT_BE_NULL. Message text:
     * The trigger store may not be null.
     */
    public static final Message THE_TRIGGER_STORE_MAY_NOT_BE_NULL = MESSAGE_SET.getMessage("THE_TRIGGER_STORE_MAY_NOT_BE_NULL");
    /**
     * Holds the definition of the message with ID ERROR_WHEN_ADDING_TRIGGERS. Message text: Error
     * when adding triggers: {0}
     */
    public static final Message ERROR_WHEN_ADDING_TRIGGERS = MESSAGE_SET.getMessage("ERROR_WHEN_ADDING_TRIGGERS");
    /**
     * Holds the definition of the message with ID EICE_MISSING_SMTP_SERVER_CONFIGURATION. Message
     * text: Missing SMTP server configuration
     */
    public static final Message EICE_MISSING_SMTP_SERVER_CONFIGURATION = MESSAGE_SET.getMessage("EICE_MISSING_SMTP_SERVER_CONFIGURATION");
}
